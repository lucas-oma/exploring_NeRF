{"cells":[{"cell_type":"markdown","metadata":{"id":"tuqdtdTR4yQk"},"source":["# Introduction"]},{"cell_type":"markdown","metadata":{"id":"9UXBPUv2407W"},"source":["This notebook walks the reader through a full implementation of the original Neural Radiance Field architecture, first introduced by Mildenhall et al. in \"[NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis.](https://www.matthewtancik.com/nerf)\" For a broader overview, read the accompanying Medium article \"[It's NeRF From Nothing: Build A Complete NeRF With Pytorch.](https://medium.com/@masonmcgough/its-nerf-from-nothing-build-a-vanilla-nerf-with-pytorch-7846e4c45666)\" This notebook assumes that you have read that article and understand the basics of NeRF.\n","\n","Much of the code comes from or is inspired by the original implementation by GitHub user [bmild](https://github.com/bmild/nerf) as well as PyTorch implementations from GitHub users [yenchenlin](https://github.com/bmild/nerf) and [krrish94](https://github.com/krrish94/nerf-pytorch/). The code has been modified for clarity and consistency."]},{"cell_type":"markdown","metadata":{"id":"v2fo27VhBlnr"},"source":["## Imports"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":297,"status":"ok","timestamp":1714614700306,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"fTqLlyOpMnV1","outputId":"8769913d-5e6c-4463-9723-7612fc7f8b4f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Thu May  2 01:51:39 2024       \n","+---------------------------------------------------------------------------------------+\n","| NVIDIA-SMI 535.104.05             Driver Version: 535.104.05   CUDA Version: 12.2     |\n","|-----------------------------------------+----------------------+----------------------+\n","| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |\n","|                                         |                      |               MIG M. |\n","|=========================================+======================+======================|\n","|   0  NVIDIA A100-SXM4-40GB          Off | 00000000:00:04.0 Off |                    0 |\n","| N/A   33C    P0              50W / 400W |      2MiB / 40960MiB |      0%      Default |\n","|                                         |                      |             Disabled |\n","+-----------------------------------------+----------------------+----------------------+\n","                                                                                         \n","+---------------------------------------------------------------------------------------+\n","| Processes:                                                                            |\n","|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |\n","|        ID   ID                                                             Usage      |\n","|=======================================================================================|\n","|  No running processes found                                                           |\n","+---------------------------------------------------------------------------------------+\n","Your runtime has 89.6 gigabytes of available RAM\n","\n","You are using a high-RAM runtime!\n"]}],"source":["from psutil import virtual_memory\n","\n","gpu_info = !nvidia-smi\n","gpu_info = '\\n'.join(gpu_info)\n","if gpu_info.find('failed') >= 0:\n","  print('Not connected to a GPU')\n","else:\n","  print(gpu_info)\n","\n","\n","ram_gb = virtual_memory().total / 1e9\n","print('Your runtime has {:.1f} gigabytes of available RAM\\n'.format(ram_gb))\n","\n","if ram_gb < 20:\n","  print('Not using a high-RAM runtime')\n","else:\n","  print('You are using a high-RAM runtime!')"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1047,"status":"ok","timestamp":1714614701351,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"ptTYjWao3VsM","outputId":"216db770-91ad-476f-e7b3-db325162ddf9"},"outputs":[{"output_type":"stream","name":"stdout","text":["cuda\n"]}],"source":["import os\n","from typing import Optional, Tuple, List, Union, Callable\n","\n","import numpy as np\n","import torch\n","from torch import nn\n","import matplotlib.pyplot as plt\n","from mpl_toolkits.mplot3d import axes3d\n","from tqdm import trange\n","\n","# For repeatability\n","seed = 3407\n","torch.manual_seed(seed)\n","np.random.seed(seed)\n","\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","print(device)"]},{"cell_type":"markdown","metadata":{"id":"toIYVxPL5IDO"},"source":["## Data"]},{"cell_type":"markdown","metadata":{"id":"ZNLc9hbd6JGK"},"source":["First we load the data which we will train our NeRF model on. This is the Lego bulldozer commonly seen in the NeRF demonstrations and serves as a sort of \"Hello World\" for training NeRFs. Covering other datasets is outside the scope of this notebook, but feel free to try others included in the original [NeRF source code](https://github.com/bmild/nerf) or your own datasets."]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":1,"status":"ok","timestamp":1714614701351,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"jVAGjdUthecA"},"outputs":[],"source":["if not os.path.exists('tiny_nerf_data.npz'):\n","  !wget --no-check-certificate http://cseweb.ucsd.edu/~viscomp/projects/LF/papers/ECCV20/nerf/tiny_nerf_data.npz"]},{"cell_type":"markdown","metadata":{"id":"DHpKDWmS65-w"},"source":["This dataset consists of 106 images taken of the synthetic Lego bulldozer along with poses and a common focal length value. Like the original, we reserve the first 100 images for training and a single test image for validation."]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":576},"executionInfo":{"elapsed":438,"status":"ok","timestamp":1714614701788,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"csCQJhSzhnEW","outputId":"a1b8f6fd-760b-4474-a2e4-4bfd2b730bc6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Images shape: (106, 100, 100, 3)\n","Poses shape: (106, 4, 4)\n","Focal length: 138.88887889922103\n","Pose\n","[[ 6.8935126e-01  5.3373039e-01 -4.8982298e-01 -1.9745398e+00]\n"," [-7.2442728e-01  5.0788772e-01 -4.6610624e-01 -1.8789345e+00]\n"," [ 1.4901163e-08  6.7615211e-01  7.3676193e-01  2.9699826e+00]\n"," [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  1.0000000e+00]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["data = np.load('tiny_nerf_data.npz')\n","images = data['images']\n","poses = data['poses']\n","focal = data['focal']\n","\n","print(f'Images shape: {images.shape}')\n","print(f'Poses shape: {poses.shape}')\n","print(f'Focal length: {focal}')\n","\n","height, width = images.shape[1:3]\n","near, far = 2., 6.\n","\n","n_training = 100\n","testimg_idx = 101\n","testimg, testpose = images[testimg_idx], poses[testimg_idx]\n","\n","plt.imshow(testimg)\n","print('Pose')\n","print(testpose)"]},{"cell_type":"markdown","metadata":{"id":"Wa8rlY5djYvt"},"source":["## Origins and Directions\n","\n","Recall that NeRF processes inputs from a field of positions (x,y,z) and view directions (θ,φ). To gather these input points, we need to apply inverse rendering to the input images. More concretely, we draw projection lines through each pixel and across the 3D space, from which we can draw samples.\n","\n","To sample points from the 3D space beyond our image, we first start from the initial pose of every camera taken in the photo set. With some vector math, we can convert these 4x4 pose matrices into a 3D coordinate denoting the origin and a 3D vector indicating the direction. The two together describe a vector that indicates where a camera was pointing when the photo was taken.\n","\n","The code in the cell below illustrates this by drawing arrows that depict the origin and the direction of every frame."]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":653},"executionInfo":{"elapsed":341,"status":"ok","timestamp":1714614702126,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"Wvq5Y663jYHE","outputId":"1c8e7d96-6683-4a8c-eec7-7e4693a6984e"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["dirs = np.stack([np.sum([0, 0, -1] * pose[:3, :3], axis=-1) for pose in poses])\n","origins = poses[:, :3, -1]\n","\n","ax = plt.figure(figsize=(12, 8)).add_subplot(projection='3d')\n","_ = ax.quiver(\n","  origins[..., 0].flatten(),\n","  origins[..., 1].flatten(),\n","  origins[..., 2].flatten(),\n","  dirs[..., 0].flatten(),\n","  dirs[..., 1].flatten(),\n","  dirs[..., 2].flatten(), length=0.5, normalize=True)\n","ax.set_xlabel('X')\n","ax.set_ylabel('Y')\n","ax.set_zlabel('z')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"vUI5BA9BXlTm"},"source":["With this camera pose, we can now find the projection lines along each pixel of our image. Each line is defined by its origin point (x,y,z) and its direction (in this case a 3D vector). While the origin is the same for every pixel, the direction is slightly different. These lines are slightly deflected off center such that none of these lines are parallel."]},{"cell_type":"markdown","metadata":{"id":"H7fJQ2qv9-23"},"source":["![Pinhole camera](https://www.researchgate.net/profile/Willy-Azarcoya-Cabiedes/publication/317498100/figure/fig10/AS:610418494013440@1522546518034/Pin-hole-camera-model-terminology-The-optical-center-pinhole-is-placed-at-the-origin.png)\n","\n","From [Willy Azarcoya-Cabiedes via ResearchGate](https://www.researchgate.net/figure/Pin-hole-camera-model-terminology-The-optical-center-pinhole-is-placed-at-the-origin_fig10_317498100)"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"EHNwlsOT7NTp","executionInfo":{"status":"ok","timestamp":1714614702127,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def get_rays(\n","  height: int,\n","  width: int,\n","  focal_length: float,\n","  c2w: torch.Tensor\n",") -> Tuple[torch.Tensor, torch.Tensor]:\n","  r\"\"\"\n","  Find origin and direction of rays through every pixel and camera origin.\n","  \"\"\"\n","\n","  # Apply pinhole camera model to gather directions at each pixel\n","  i, j = torch.meshgrid(\n","      torch.arange(width, dtype=torch.float32).to(c2w),\n","      torch.arange(height, dtype=torch.float32).to(c2w),\n","      indexing='ij')\n","  i, j = i.transpose(-1, -2), j.transpose(-1, -2)\n","  directions = torch.stack([(i - width * .5) / focal_length,\n","                            -(j - height * .5) / focal_length,\n","                            -torch.ones_like(i)\n","                           ], dim=-1)\n","\n","  # Apply camera pose to directions\n","  rays_d = torch.sum(directions[..., None, :] * c2w[:3, :3], dim=-1)\n","\n","  # Origin is same for all directions (the optical center)\n","  rays_o = c2w[:3, -1].expand(rays_d.shape)\n","  return rays_o, rays_d"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1714614702127,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"gYPFqClGkKD3","outputId":"ac421451-0e91-4f39-8ddb-8ab9d5fdab03"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 6.8935126e-01,  5.3373039e-01, -4.8982298e-01, -1.9745398e+00],\n","       [-7.2442728e-01,  5.0788772e-01, -4.6610624e-01, -1.8789345e+00],\n","       [ 1.4901163e-08,  6.7615211e-01,  7.3676193e-01,  2.9699826e+00],\n","       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],\n","      dtype=float32)"]},"metadata":{},"execution_count":7}],"source":["testpose"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1714614702127,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"Aivi7gXLkPTP","outputId":"85101e05-db12-4a47-e489-655d2f097de5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(138.8888789)"]},"metadata":{},"execution_count":8}],"source":["focal"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":316,"status":"ok","timestamp":1714614702440,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"FoV1r440lCQB","outputId":"381ead9a-9e19-476a-847c-b0e611afcae8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Ray Origin\n","torch.Size([100, 100, 3])\n","tensor([-1.9745, -1.8789,  2.9700], device='cuda:0')\n","\n","Ray Direction\n","torch.Size([100, 100, 3])\n","tensor([ 0.4898,  0.4661, -0.7368], device='cuda:0')\n","\n"]}],"source":["# Gather as torch tensors\n","images = torch.from_numpy(data['images'][:n_training]).to(device)\n","poses = torch.from_numpy(data['poses']).to(device)\n","focal = torch.from_numpy(data['focal']).to(device)\n","testimg = torch.from_numpy(data['images'][testimg_idx]).to(device)\n","testpose = torch.from_numpy(data['poses'][testimg_idx]).to(device)\n","\n","# Grab rays from sample image\n","height, width = images.shape[1:3]\n","with torch.no_grad():\n","  ray_origin, ray_direction = get_rays(height, width, focal, testpose)\n","\n","print('Ray Origin')\n","print(ray_origin.shape)\n","print(ray_origin[height // 2, width // 2, :])\n","print('')\n","\n","print('Ray Direction')\n","print(ray_direction.shape)\n","print(ray_direction[height // 2, width // 2, :])\n","print('')"]},{"cell_type":"markdown","metadata":{"id":"EU1QDn66CQob"},"source":["# Architecture"]},{"cell_type":"markdown","metadata":{"id":"2Yg3f_12FYjw"},"source":["## Stratified Sampling\n","\n","Now that we have these lines, defined as origin and direction vectors, we can begin the process of sampling them. Recall that NeRF takes a coarse-to-fine sampling strategy, starting with the stratified sampling approach.\n","\n","The stratified sampling approach splits the ray into evenly-spaced bins and randomly samples within each bin. The `perturb` setting determines whether to sample points uniformly from each bin or to simply use the bin center as the point. In most cases, we want to keep `perturb = True` as it will encourage the network to learn over a continuously sampled space. It may be useful to disable for debugging."]},{"cell_type":"code","execution_count":10,"metadata":{"id":"wAAfDK2L-faR","executionInfo":{"status":"ok","timestamp":1714614702440,"user_tz":240,"elapsed":3,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def sample_stratified(\n","  rays_o: torch.Tensor,\n","  rays_d: torch.Tensor,\n","  near: float,\n","  far: float,\n","  n_samples: int,\n","  perturb: Optional[bool] = True,\n","  inverse_depth: bool = False\n",") -> Tuple[torch.Tensor, torch.Tensor]:\n","  r\"\"\"\n","  Sample along ray from regularly-spaced bins.\n","  \"\"\"\n","\n","  # Grab samples for space integration along ray\n","  t_vals = torch.linspace(0., 1., n_samples, device=rays_o.device)\n","  if not inverse_depth:\n","    # Sample linearly between `near` and `far`\n","    z_vals = near * (1.-t_vals) + far * (t_vals)\n","  else:\n","    # Sample linearly in inverse depth (disparity)\n","    z_vals = 1./(1./near * (1.-t_vals) + 1./far * (t_vals))\n","\n","  # Draw uniform samples from bins along ray\n","  if perturb:\n","    mids = .5 * (z_vals[1:] + z_vals[:-1])\n","    upper = torch.concat([mids, z_vals[-1:]], dim=-1)\n","    lower = torch.concat([z_vals[:1], mids], dim=-1)\n","    t_rand = torch.rand([n_samples], device=z_vals.device)\n","    z_vals = lower + (upper - lower) * t_rand\n","  z_vals = z_vals.expand(list(rays_o.shape[:-1]) + [n_samples])\n","\n","  # Apply scale from `rays_d` and offset from `rays_o` to samples\n","  # pts: (width, height, n_samples, 3)\n","  pts = rays_o[..., None, :] + rays_d[..., None, :] * z_vals[..., :, None]\n","  return pts, z_vals"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1714614702440,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"kCWWyvuLm0VE","outputId":"0e7b8475-991c-4921-8a17-815e0022be6f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Input Points\n","torch.Size([10000, 8, 3])\n","\n","Distances Along Ray\n","torch.Size([10000, 8])\n"]}],"source":["# Draw stratified samples from example\n","rays_o = ray_origin.view([-1, 3])\n","rays_d = ray_direction.view([-1, 3])\n","n_samples = 8\n","perturb = True\n","inverse_depth = False\n","with torch.no_grad():\n","  pts, z_vals = sample_stratified(rays_o, rays_d, near, far, n_samples,\n","                                  perturb=perturb, inverse_depth=inverse_depth)\n","\n","print('Input Points')\n","print(pts.shape)\n","print('')\n","print('Distances Along Ray')\n","print(z_vals.shape)"]},{"cell_type":"markdown","metadata":{"id":"wEeLXT1pc-c2"},"source":["Now we visualize these sampled points. The unperturbed blue points are the bin \"centers.\" The red points are a sampling of perturbed points. Notice how the red points are slightly offset from the blue points above them, but all are constrained between `near` and `far`."]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"executionInfo":{"elapsed":289,"status":"ok","timestamp":1714614702728,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"lt3zLUginJ0B","outputId":"23cafed4-8a7b-4b07-e465-f8260deb977b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["y_vals = torch.zeros_like(z_vals)\n","\n","_, z_vals_unperturbed = sample_stratified(rays_o, rays_d, near, far, n_samples,\n","                                  perturb=False, inverse_depth=inverse_depth)\n","plt.plot(z_vals_unperturbed[0].cpu().numpy(), 1 + y_vals[0].cpu().numpy(), 'b-o')\n","plt.plot(z_vals[0].cpu().numpy(), y_vals[0].cpu().numpy(), 'r-o')\n","plt.ylim([-1, 2])\n","plt.title('Stratified Sampling (blue) with Perturbation (red)')\n","ax = plt.gca()\n","ax.axes.yaxis.set_visible(False)\n","plt.grid(True)"]},{"cell_type":"markdown","metadata":{"id":"Yc0cS74xFb-G"},"source":["## Positional Encoder\n","\n","Much like Transformers, NeRFs make use of positional encoders. In this case, it's to map the inputs to a higher frequency space to compensate for the bias that neural networks have for learning lower-frequency functions.\n","\n","Here we build a simple `torch.nn.Module` of our positional encoder. The same encoder implementation can be applied to both input samples and view directions. However, we choose different parameters for these inputs. We use the default settings from the original."]},{"cell_type":"code","execution_count":13,"metadata":{"id":"rrbs7YoMHAbF","executionInfo":{"status":"ok","timestamp":1714614702728,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["class PositionalEncoder(nn.Module):\n","  r\"\"\"\n","  Sine-cosine positional encoder for input points.\n","  \"\"\"\n","  def __init__(\n","    self,\n","    d_input: int,\n","    n_freqs: int,\n","    log_space: bool = False\n","  ):\n","    super().__init__()\n","    self.d_input = d_input\n","    self.n_freqs = n_freqs\n","    self.log_space = log_space\n","    self.d_output = d_input * (1 + 2 * self.n_freqs)\n","    self.embed_fns = [lambda x: x]\n","\n","    # Define frequencies in either linear or log scale\n","    if self.log_space:\n","      freq_bands = 2.**torch.linspace(0., self.n_freqs - 1, self.n_freqs)\n","    else:\n","      freq_bands = torch.linspace(2.**0., 2.**(self.n_freqs - 1), self.n_freqs)\n","\n","    # Alternate sin and cos\n","    for freq in freq_bands:\n","      self.embed_fns.append(lambda x, freq=freq: torch.sin(x * freq))\n","      self.embed_fns.append(lambda x, freq=freq: torch.cos(x * freq))\n","\n","  def forward(\n","    self,\n","    x\n","  ) -> torch.Tensor:\n","    r\"\"\"\n","    Apply positional encoding to input.\n","    \"\"\"\n","    return torch.concat([fn(x) for fn in self.embed_fns], dim=-1)\n"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1714614702729,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"},"user_tz":240},"id":"OG9LrSLQvH46","outputId":"0e1246a7-0888-4ca4-e03f-958a03ab5fb6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Encoded Points\n","torch.Size([80000, 63])\n","tensor(-2.6900, device='cuda:0') tensor(3.4005, device='cuda:0') tensor(0.0273, device='cuda:0')\n","\n","torch.Size([80000, 27])\n","Encoded Viewdirs\n","tensor(-1., device='cuda:0') tensor(1., device='cuda:0') tensor(0.1056, device='cuda:0')\n","\n"]}],"source":["# Create encoders for points and view directions\n","encoder = PositionalEncoder(3, 10)\n","viewdirs_encoder = PositionalEncoder(3, 4)\n","\n","# Grab flattened points and view directions\n","pts_flattened = pts.reshape(-1, 3)\n","viewdirs = rays_d / torch.norm(rays_d, dim=-1, keepdim=True)\n","flattened_viewdirs = viewdirs[:, None, ...].expand(pts.shape).reshape((-1, 3))\n","\n","# Encode inputs\n","encoded_points = encoder(pts_flattened)\n","encoded_viewdirs = viewdirs_encoder(flattened_viewdirs)\n","\n","print('Encoded Points')\n","print(encoded_points.shape)\n","print(torch.min(encoded_points), torch.max(encoded_points), torch.mean(encoded_points))\n","print('')\n","\n","print(encoded_viewdirs.shape)\n","print('Encoded Viewdirs')\n","print(torch.min(encoded_viewdirs), torch.max(encoded_viewdirs), torch.mean(encoded_viewdirs))\n","print('')"]},{"cell_type":"markdown","metadata":{"id":"94jKMMz7gb7Y"},"source":["## NeRF Model\n","\n","Here we define the NeRF model, which consists primarily of a `ModuleList` of `Linear` layers, separated by non-linear activation functions and the occasional residual connection. This model features an optional input for view directions, which will alter the model architecture if provided at instantiation. This implementation is based on Section 3 of the original \"NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis\" paper and uses the same defaults."]},{"cell_type":"code","execution_count":15,"metadata":{"id":"MvIDtf3TgaOA","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["class NeRF(nn.Module):\n","  r\"\"\"\n","  Neural radiance fields module.\n","  \"\"\"\n","  def __init__(\n","    self,\n","    d_input: int = 3,\n","    n_layers: int = 8,\n","    d_filter: int = 256,\n","    skip: Tuple[int] = (4,),\n","    d_viewdirs: Optional[int] = None\n","  ):\n","    super().__init__()\n","    self.d_input = d_input\n","    self.skip = skip\n","    self.act = nn.functional.relu\n","    self.d_viewdirs = d_viewdirs\n","\n","    # Create model layers\n","    self.layers = nn.ModuleList(\n","      [nn.Linear(self.d_input, d_filter)] +\n","      [nn.Linear(d_filter + self.d_input, d_filter) if i in skip \\\n","       else nn.Linear(d_filter, d_filter) for i in range(n_layers - 1)]\n","    )\n","\n","    # Bottleneck layers\n","    if self.d_viewdirs is not None:\n","      # If using viewdirs, split alpha and RGB\n","      self.alpha_out = nn.Linear(d_filter, 1)\n","      self.rgb_filters = nn.Linear(d_filter, d_filter)\n","      self.branch = nn.Linear(d_filter + self.d_viewdirs, d_filter // 2)\n","      self.output = nn.Linear(d_filter // 2, 3)\n","    else:\n","      # If no viewdirs, use simpler output\n","      self.output = nn.Linear(d_filter, 4)\n","\n","  def forward(\n","    self,\n","    x: torch.Tensor,\n","    viewdirs: Optional[torch.Tensor] = None\n","  ) -> torch.Tensor:\n","    r\"\"\"\n","    Forward pass with optional view direction.\n","    \"\"\"\n","\n","    # Cannot use viewdirs if instantiated with d_viewdirs = None\n","    if self.d_viewdirs is None and viewdirs is not None:\n","      raise ValueError('Cannot input x_direction if d_viewdirs was not given.')\n","\n","    # Apply forward pass up to bottleneck\n","    x_input = x\n","    for i, layer in enumerate(self.layers):\n","      x = self.act(layer(x))\n","      if i in self.skip:\n","        x = torch.cat([x, x_input], dim=-1)\n","\n","    # Apply bottleneck\n","    if self.d_viewdirs is not None:\n","      # Split alpha from network output\n","      alpha = self.alpha_out(x)\n","\n","      # Pass through bottleneck to get RGB\n","      x = self.rgb_filters(x)\n","      x = torch.concat([x, viewdirs], dim=-1)\n","      x = self.act(self.branch(x))\n","      x = self.output(x)\n","\n","      # Concatenate alphas to output\n","      x = torch.concat([x, alpha], dim=-1)\n","    else:\n","      # Simple output\n","      x = self.output(x)\n","    return x"]},{"cell_type":"markdown","metadata":{"id":"-Xckd4RuFitJ"},"source":["## Volume Rendering\n","\n","From the raw NeRF outputs, we still need to convert these into an image. This is where we apply the volume integration described in Equations 1-3 in Section 4 of the paper. Essentially, we take the weighted sum of all samples along the ray of each pixel to get the estimated color value at that pixel. Each RGB sample is weighted by its alpha value. Higher alpha values indicate higher likelihood that the sampled area is opaque, therefore points further along the ray are likelier to be occluded. The cumulative product ensures that those further points are dampened."]},{"cell_type":"code","execution_count":16,"metadata":{"id":"m8Dvz6DszOUT","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def cumprod_exclusive(\n","  tensor: torch.Tensor\n",") -> torch.Tensor:\n","  r\"\"\"\n","  (Courtesy of https://github.com/krrish94/nerf-pytorch)\n","\n","  Mimick functionality of tf.math.cumprod(..., exclusive=True), as it isn't available in PyTorch.\n","\n","  Args:\n","  tensor (torch.Tensor): Tensor whose cumprod (cumulative product, see `torch.cumprod`) along dim=-1\n","    is to be computed.\n","  Returns:\n","  cumprod (torch.Tensor): cumprod of Tensor along dim=-1, mimiciking the functionality of\n","    tf.math.cumprod(..., exclusive=True) (see `tf.math.cumprod` for details).\n","  \"\"\"\n","\n","  # Compute regular cumprod first (this is equivalent to `tf.math.cumprod(..., exclusive=False)`).\n","  cumprod = torch.cumprod(tensor, -1)\n","  # \"Roll\" the elements along dimension 'dim' by 1 element.\n","  cumprod = torch.roll(cumprod, 1, -1)\n","  # Replace the first element by \"1\" as this is what tf.cumprod(..., exclusive=True) does.\n","  cumprod[..., 0] = 1.\n","\n","  return cumprod\n","\n","def raw2outputs(\n","  raw: torch.Tensor,\n","  z_vals: torch.Tensor,\n","  rays_d: torch.Tensor,\n","  raw_noise_std: float = 0.0,\n","  white_bkgd: bool = False\n",") -> Tuple[torch.Tensor, torch.Tensor, torch.Tensor, torch.Tensor]:\n","  r\"\"\"\n","  Convert the raw NeRF output into RGB and other maps.\n","  \"\"\"\n","\n","  # Difference between consecutive elements of `z_vals`. [n_rays, n_samples]\n","  dists = z_vals[..., 1:] - z_vals[..., :-1]\n","  dists = torch.cat([dists, 1e10 * torch.ones_like(dists[..., :1])], dim=-1)\n","\n","  # Multiply each distance by the norm of its corresponding direction ray\n","  # to convert to real world distance (accounts for non-unit directions).\n","  dists = dists * torch.norm(rays_d[..., None, :], dim=-1)\n","\n","  # Add noise to model's predictions for density. Can be used to\n","  # regularize network during training (prevents floater artifacts).\n","  noise = 0.\n","  if raw_noise_std > 0.:\n","    noise = torch.randn(raw[..., 3].shape) * raw_noise_std\n","\n","  # Predict density of each sample along each ray. Higher values imply\n","  # higher likelihood of being absorbed at this point. [n_rays, n_samples]\n","  alpha = 1.0 - torch.exp(-nn.functional.relu(raw[..., 3] + noise) * dists)\n","\n","  # Compute weight for RGB of each sample along each ray. [n_rays, n_samples]\n","  # The higher the alpha, the lower subsequent weights are driven.\n","  weights = alpha * cumprod_exclusive(1. - alpha + 1e-10)\n","\n","  # Compute weighted RGB map.\n","  rgb = torch.sigmoid(raw[..., :3])  # [n_rays, n_samples, 3]\n","  rgb_map = torch.sum(weights[..., None] * rgb, dim=-2)  # [n_rays, 3]\n","\n","  # Estimated depth map is predicted distance.\n","  depth_map = torch.sum(weights * z_vals, dim=-1)\n","\n","  # Disparity map is inverse depth.\n","  disp_map = 1. / torch.max(1e-10 * torch.ones_like(depth_map),\n","                            depth_map / torch.sum(weights, -1))\n","\n","  # Sum of weights along each ray. In [0, 1] up to numerical error.\n","  acc_map = torch.sum(weights, dim=-1)\n","\n","  # To composite onto a white background, use the accumulated alpha map.\n","  if white_bkgd:\n","    rgb_map = rgb_map + (1. - acc_map[..., None])\n","\n","  return rgb_map, depth_map, acc_map, weights"]},{"cell_type":"markdown","metadata":{"id":"ySqZmYMRFoF1"},"source":["## Hierarchical Volume Sampling\n","\n","The 3D space is in fact very sparse with occlusions and so most points don't contribute much to the rendered image. It is therefore more beneficial to oversample regions with a high likelihood of contributing to the integral. Here we apply learned, normalized weights to the first set of samples to create a PDF across the ray, then apply inverse transform sampling to this PDF to gather a second set of samples."]},{"cell_type":"code","execution_count":17,"metadata":{"id":"fK2x2JEFFnxA","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def sample_pdf(\n","  bins: torch.Tensor,\n","  weights: torch.Tensor,\n","  n_samples: int,\n","  perturb: bool = False\n",") -> torch.Tensor:\n","  r\"\"\"\n","  Apply inverse transform sampling to a weighted set of points.\n","  \"\"\"\n","\n","  # Normalize weights to get PDF.\n","  pdf = (weights + 1e-5) / torch.sum(weights + 1e-5, -1, keepdims=True) # [n_rays, weights.shape[-1]]\n","\n","  # Convert PDF to CDF.\n","  cdf = torch.cumsum(pdf, dim=-1) # [n_rays, weights.shape[-1]]\n","  cdf = torch.concat([torch.zeros_like(cdf[..., :1]), cdf], dim=-1) # [n_rays, weights.shape[-1] + 1]\n","\n","  # Take sample positions to grab from CDF. Linear when perturb == 0.\n","  if not perturb:\n","    u = torch.linspace(0., 1., n_samples, device=cdf.device)\n","    u = u.expand(list(cdf.shape[:-1]) + [n_samples]) # [n_rays, n_samples]\n","  else:\n","    u = torch.rand(list(cdf.shape[:-1]) + [n_samples], device=cdf.device) # [n_rays, n_samples]\n","\n","  # Find indices along CDF where values in u would be placed.\n","  u = u.contiguous() # Returns contiguous tensor with same values.\n","  inds = torch.searchsorted(cdf, u, right=True) # [n_rays, n_samples]\n","\n","  # Clamp indices that are out of bounds.\n","  below = torch.clamp(inds - 1, min=0)\n","  above = torch.clamp(inds, max=cdf.shape[-1] - 1)\n","  inds_g = torch.stack([below, above], dim=-1) # [n_rays, n_samples, 2]\n","\n","  # Sample from cdf and the corresponding bin centers.\n","  matched_shape = list(inds_g.shape[:-1]) + [cdf.shape[-1]]\n","  cdf_g = torch.gather(cdf.unsqueeze(-2).expand(matched_shape), dim=-1,\n","                       index=inds_g)\n","  bins_g = torch.gather(bins.unsqueeze(-2).expand(matched_shape), dim=-1,\n","                        index=inds_g)\n","\n","  # Convert samples to ray length.\n","  denom = (cdf_g[..., 1] - cdf_g[..., 0])\n","  denom = torch.where(denom < 1e-5, torch.ones_like(denom), denom)\n","  t = (u - cdf_g[..., 0]) / denom\n","  samples = bins_g[..., 0] + t * (bins_g[..., 1] - bins_g[..., 0])\n","\n","  return samples # [n_rays, n_samples]"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"kU4qRGMhNNHu","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def sample_hierarchical(\n","  rays_o: torch.Tensor,\n","  rays_d: torch.Tensor,\n","  z_vals: torch.Tensor,\n","  weights: torch.Tensor,\n","  n_samples: int,\n","  perturb: bool = False\n",") -> Tuple[torch.Tensor, torch.Tensor, torch.Tensor]:\n","  r\"\"\"\n","  Apply hierarchical sampling to the rays.\n","  \"\"\"\n","\n","  # Draw samples from PDF using z_vals as bins and weights as probabilities.\n","  z_vals_mid = .5 * (z_vals[..., 1:] + z_vals[..., :-1])\n","  new_z_samples = sample_pdf(z_vals_mid, weights[..., 1:-1], n_samples,\n","                          perturb=perturb)\n","  new_z_samples = new_z_samples.detach()\n","\n","  # Resample points from ray based on PDF.\n","  z_vals_combined, _ = torch.sort(torch.cat([z_vals, new_z_samples], dim=-1), dim=-1)\n","  pts = rays_o[..., None, :] + rays_d[..., None, :] * z_vals_combined[..., :, None]  # [N_rays, N_samples + n_samples, 3]\n","  return pts, z_vals_combined, new_z_samples"]},{"cell_type":"markdown","metadata":{"id":"XFUaajNpNNgJ"},"source":["## Full Forward Pass\n","\n","Here is where we put everything together to compute a single forward pass through our model.\n","\n","Due to potential memory issues, the forward pass is computed in \"chunks,\" which are then aggregated across a single batch. The gradient propagation is done after the whole batch is processed, hence the distinction between \"chunks\" and \"batches.\" Chunking is especially important for the Google Colab environment, which provides more modest resources than those cited in the original paper."]},{"cell_type":"code","execution_count":19,"metadata":{"id":"v9SbAqC6Ki9H","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def get_chunks(\n","  inputs: torch.Tensor,\n","  chunksize: int = 2**15\n",") -> List[torch.Tensor]:\n","  r\"\"\"\n","  Divide an input into chunks.\n","  \"\"\"\n","  return [inputs[i:i + chunksize] for i in range(0, inputs.shape[0], chunksize)]\n","\n","def prepare_chunks(\n","  points: torch.Tensor,\n","  encoding_function: Callable[[torch.Tensor], torch.Tensor],\n","  chunksize: int = 2**15\n",") -> List[torch.Tensor]:\n","  r\"\"\"\n","  Encode and chunkify points to prepare for NeRF model.\n","  \"\"\"\n","  points = points.reshape((-1, 3))\n","  points = encoding_function(points)\n","  points = get_chunks(points, chunksize=chunksize)\n","  return points\n","\n","def prepare_viewdirs_chunks(\n","  points: torch.Tensor,\n","  rays_d: torch.Tensor,\n","  encoding_function: Callable[[torch.Tensor], torch.Tensor],\n","  chunksize: int = 2**15\n",") -> List[torch.Tensor]:\n","  r\"\"\"\n","  Encode and chunkify viewdirs to prepare for NeRF model.\n","  \"\"\"\n","  # Prepare the viewdirs\n","  viewdirs = rays_d / torch.norm(rays_d, dim=-1, keepdim=True)\n","  viewdirs = viewdirs[:, None, ...].expand(points.shape).reshape((-1, 3))\n","  viewdirs = encoding_function(viewdirs)\n","  viewdirs = get_chunks(viewdirs, chunksize=chunksize)\n","  return viewdirs"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"nY2Dt8lgWhKO","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def nerf_forward(\n","  rays_o: torch.Tensor,\n","  rays_d: torch.Tensor,\n","  near: float,\n","  far: float,\n","  encoding_fn: Callable[[torch.Tensor], torch.Tensor],\n","  coarse_model: nn.Module,\n","  kwargs_sample_stratified: dict = None,\n","  n_samples_hierarchical: int = 0,\n","  kwargs_sample_hierarchical: dict = None,\n","  fine_model = None,\n","  viewdirs_encoding_fn: Optional[Callable[[torch.Tensor], torch.Tensor]] = None,\n","  chunksize: int = 2**15\n",") -> Tuple[torch.Tensor, torch.Tensor, torch.Tensor, dict]:\n","  r\"\"\"\n","  Compute forward pass through model(s).\n","  \"\"\"\n","\n","  # Set no kwargs if none are given.\n","  if kwargs_sample_stratified is None:\n","    kwargs_sample_stratified = {}\n","  if kwargs_sample_hierarchical is None:\n","    kwargs_sample_hierarchical = {}\n","\n","  # Sample query points along each ray.\n","  query_points, z_vals = sample_stratified(\n","      rays_o, rays_d, near, far, **kwargs_sample_stratified)\n","\n","  # Prepare batches.\n","  batches = prepare_chunks(query_points, encoding_fn, chunksize=chunksize)\n","  if viewdirs_encoding_fn is not None:\n","    batches_viewdirs = prepare_viewdirs_chunks(query_points, rays_d,\n","                                               viewdirs_encoding_fn,\n","                                               chunksize=chunksize)\n","  else:\n","    batches_viewdirs = [None] * len(batches)\n","\n","  # Coarse model pass.\n","  # Split the encoded points into \"chunks\", run the model on all chunks, and\n","  # concatenate the results (to avoid out-of-memory issues).\n","  predictions = []\n","  for batch, batch_viewdirs in zip(batches, batches_viewdirs):\n","    predictions.append(coarse_model(batch, viewdirs=batch_viewdirs))\n","  raw = torch.cat(predictions, dim=0)\n","  raw = raw.reshape(list(query_points.shape[:2]) + [raw.shape[-1]])\n","\n","  # Perform differentiable volume rendering to re-synthesize the RGB image.\n","  rgb_map, depth_map, acc_map, weights = raw2outputs(raw, z_vals, rays_d)\n","  # rgb_map, depth_map, acc_map, weights = render_volume_density(raw, rays_o, z_vals)\n","  outputs = {\n","      'z_vals_stratified': z_vals\n","  }\n","\n","  # Fine model pass.\n","  if n_samples_hierarchical > 0:\n","    # Save previous outputs to return.\n","    rgb_map_0, depth_map_0, acc_map_0 = rgb_map, depth_map, acc_map\n","\n","    # Apply hierarchical sampling for fine query points.\n","    query_points, z_vals_combined, z_hierarch = sample_hierarchical(\n","      rays_o, rays_d, z_vals, weights, n_samples_hierarchical,\n","      **kwargs_sample_hierarchical)\n","\n","    # Prepare inputs as before.\n","    batches = prepare_chunks(query_points, encoding_fn, chunksize=chunksize)\n","    if viewdirs_encoding_fn is not None:\n","      batches_viewdirs = prepare_viewdirs_chunks(query_points, rays_d,\n","                                                 viewdirs_encoding_fn,\n","                                                 chunksize=chunksize)\n","    else:\n","      batches_viewdirs = [None] * len(batches)\n","\n","    # Forward pass new samples through fine model.\n","    fine_model = fine_model if fine_model is not None else coarse_model\n","    predictions = []\n","    for batch, batch_viewdirs in zip(batches, batches_viewdirs):\n","      predictions.append(fine_model(batch, viewdirs=batch_viewdirs))\n","    raw = torch.cat(predictions, dim=0)\n","    raw = raw.reshape(list(query_points.shape[:2]) + [raw.shape[-1]])\n","\n","    # Perform differentiable volume rendering to re-synthesize the RGB image.\n","    rgb_map, depth_map, acc_map, weights = raw2outputs(raw, z_vals_combined, rays_d)\n","\n","    # Store outputs.\n","    outputs['z_vals_hierarchical'] = z_hierarch\n","    outputs['rgb_map_0'] = rgb_map_0\n","    outputs['depth_map_0'] = depth_map_0\n","    outputs['acc_map_0'] = acc_map_0\n","\n","  # Store outputs.\n","  outputs['rgb_map'] = rgb_map\n","  outputs['depth_map'] = depth_map\n","  outputs['acc_map'] = acc_map\n","  outputs['weights'] = weights\n","  return outputs"]},{"cell_type":"markdown","metadata":{"id":"CtpbzoRJYsK-"},"source":["# Train\n","\n","At long last, we have (almost) everything we need to train the model. Now we will do some setup for a simple training procedure, creating hyperparameters and helper functions, then train our model."]},{"cell_type":"markdown","metadata":{"id":"iBXWfThMYtkR"},"source":["## Hyperparameters\n","\n","All hyperparameters for training are set here. Defaults were taken from the original, unless computational constraints prohibit them. In this case, we apply sensible defaults that are well within the resources provided by Google Colab."]},{"cell_type":"code","execution_count":21,"metadata":{"id":"JovhcSy1NIhr","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["# Encoders\n","d_input = 3           # Number of input dimensions\n","n_freqs = 10          # Number of encoding functions for samples\n","log_space = True      # If set, frequencies scale in log space\n","use_viewdirs = True   # If set, use view direction as input\n","n_freqs_views = 4     # Number of encoding functions for views\n","\n","# Stratified sampling\n","n_samples = 64         # Number of spatial samples per ray\n","perturb = True         # If set, applies noise to sample positions\n","inverse_depth = False  # If set, samples points linearly in inverse depth\n","\n","# Model\n","d_filter = 128          # Dimensions of linear layer filters\n","n_layers = 2            # Number of layers in network bottleneck\n","skip = []               # Layers at which to apply input residual\n","use_fine_model = True   # If set, creates a fine model\n","d_filter_fine = 128     # Dimensions of linear layer filters of fine network\n","n_layers_fine = 6       # Number of layers in fine network bottleneck\n","\n","# Hierarchical sampling\n","n_samples_hierarchical = 64   # Number of samples per ray\n","perturb_hierarchical = False  # If set, applies noise to sample positions\n","\n","# Optimizer\n","lr = 5e-4  # Learning rate\n","\n","# Training\n","n_iters = 10000\n","batch_size = 2**14          # Number of rays per gradient step (power of 2)\n","one_image_per_step = True   # One image per gradient step (disables batching)\n","chunksize = 2**14           # Modify as needed to fit in GPU memory\n","center_crop = True          # Crop the center of image (one_image_per_)\n","center_crop_iters = 50      # Stop cropping center after this many epochs\n","display_rate = 25           # Display test output every X epochs\n","\n","# Early Stopping\n","warmup_iters = 100          # Number of iterations during warmup phase\n","warmup_min_fitness = 10.0   # Min val PSNR to continue training at warmup_iters\n","n_restarts = 10             # Number of times to restart if training stalls\n","\n","# We bundle the kwargs for various functions to pass all at once.\n","kwargs_sample_stratified = {\n","    'n_samples': n_samples,\n","    'perturb': perturb,\n","    'inverse_depth': inverse_depth\n","}\n","kwargs_sample_hierarchical = {\n","    'perturb': perturb\n","}"]},{"cell_type":"markdown","metadata":{"id":"ODAQKoAUY0KJ"},"source":["## Training Classes and Functions\n","\n","Here we create some helper functions for training. NeRF can be prone to local minima, in which training will quickly stall and produce blank outputs. `EarlyStopping` is used to restart the training when learning stalls, if necessary."]},{"cell_type":"code","execution_count":22,"metadata":{"id":"GeIrS4P54piy","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def plot_samples(\n","  z_vals: torch.Tensor,\n","  z_hierarch: Optional[torch.Tensor] = None,\n","  ax: Optional[np.ndarray] = None):\n","  r\"\"\"\n","  Plot stratified and (optional) hierarchical samples.\n","  \"\"\"\n","  y_vals = 1 + np.zeros_like(z_vals)\n","\n","  if ax is None:\n","    ax = plt.subplot()\n","  ax.plot(z_vals, y_vals, 'b-o')\n","  if z_hierarch is not None:\n","    y_hierarch = np.zeros_like(z_hierarch)\n","    ax.plot(z_hierarch, y_hierarch, 'r-o')\n","  ax.set_ylim([-1, 2])\n","  ax.set_title('Stratified  Samples (blue) and Hierarchical Samples (red)')\n","  ax.axes.yaxis.set_visible(False)\n","  ax.grid(True)\n","  return ax\n","\n","def crop_center(\n","  img: torch.Tensor,\n","  frac: float = 0.5\n",") -> torch.Tensor:\n","  r\"\"\"\n","  Crop center square from image.\n","  \"\"\"\n","  h_offset = round(img.shape[0] * (frac / 2))\n","  w_offset = round(img.shape[1] * (frac / 2))\n","  return img[h_offset:-h_offset, w_offset:-w_offset]\n","\n","class EarlyStopping:\n","  r\"\"\"\n","  Early stopping helper based on fitness criterion.\n","  \"\"\"\n","  def __init__(\n","    self,\n","    patience: int = 30,\n","    margin: float = 1e-4\n","  ):\n","    self.best_fitness = 0.0  # In our case PSNR\n","    self.best_iter = 0\n","    self.margin = margin\n","    self.patience = patience or float('inf')  # epochs to wait after fitness stops improving to stop\n","\n","  def __call__(\n","    self,\n","    iter: int,\n","    fitness: float\n","  ):\n","    r\"\"\"\n","    Check if criterion for stopping is met.\n","    \"\"\"\n","    if (fitness - self.best_fitness) > self.margin:\n","      self.best_iter = iter\n","      self.best_fitness = fitness\n","    delta = iter - self.best_iter\n","    stop = delta >= self.patience  # stop training if patience exceeded\n","    return stop"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"BXTZ79RxYSXA","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["def init_models():\n","  r\"\"\"\n","  Initialize models, encoders, and optimizer for NeRF training.\n","  \"\"\"\n","  # Encoders\n","  encoder = PositionalEncoder(d_input, n_freqs, log_space=log_space)\n","  encode = lambda x: encoder(x)\n","\n","  # View direction encoders\n","  if use_viewdirs:\n","    encoder_viewdirs = PositionalEncoder(d_input, n_freqs_views,\n","                                        log_space=log_space)\n","    encode_viewdirs = lambda x: encoder_viewdirs(x)\n","    d_viewdirs = encoder_viewdirs.d_output\n","  else:\n","    encode_viewdirs = None\n","    d_viewdirs = None\n","\n","  # Models\n","  model = NeRF(encoder.d_output, n_layers=n_layers, d_filter=d_filter, skip=skip,\n","              d_viewdirs=d_viewdirs)\n","  model.to(device)\n","  model_params = list(model.parameters())\n","  if use_fine_model:\n","    fine_model = NeRF(encoder.d_output, n_layers=n_layers, d_filter=d_filter, skip=skip,\n","                      d_viewdirs=d_viewdirs)\n","    fine_model.to(device)\n","    model_params = model_params + list(fine_model.parameters())\n","  else:\n","    fine_model = None\n","\n","  # Optimizer\n","  optimizer = torch.optim.Adam(model_params, lr=lr)\n","\n","  # Early Stopping\n","  warmup_stopper = EarlyStopping(patience=50)\n","\n","  return model, fine_model, encode, encode_viewdirs, optimizer, warmup_stopper"]},{"cell_type":"markdown","metadata":{"id":"CH6R8jD_Ywp6"},"source":["## Training Loop\n","\n","Here we start training our model."]},{"cell_type":"code","execution_count":24,"metadata":{"id":"r87VAJ0E7aKQ","executionInfo":{"status":"ok","timestamp":1714614702729,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["_TRAIN_LOSS = list()\n","_VAL_LOSS = list()\n","\n","def train():\n","  r\"\"\"\n","  Launch training session for NeRF.\n","  \"\"\"\n","  # Shuffle rays across all images.\n","  if not one_image_per_step:\n","    height, width = images.shape[1:3]\n","    all_rays = torch.stack([torch.stack(get_rays(height, width, focal, p), 0)\n","                        for p in poses[:n_training]], 0)\n","    rays_rgb = torch.cat([all_rays, images[:, None]], 1)\n","    rays_rgb = torch.permute(rays_rgb, [0, 2, 3, 1, 4])\n","    rays_rgb = rays_rgb.reshape([-1, 3, 3])\n","    rays_rgb = rays_rgb.type(torch.float32)\n","    rays_rgb = rays_rgb[torch.randperm(rays_rgb.shape[0])]\n","    i_batch = 0\n","\n","  train_psnrs = []\n","  val_psnrs = []\n","  iternums = []\n","  for i in trange(n_iters):\n","    model.train()\n","\n","    if one_image_per_step:\n","      # Randomly pick an image as the target.\n","      target_img_idx = np.random.randint(images.shape[0])\n","      target_img = images[target_img_idx].to(device)\n","      if center_crop and i < center_crop_iters:\n","        target_img = crop_center(target_img)\n","      height, width = target_img.shape[:2]\n","      target_pose = poses[target_img_idx].to(device)\n","      rays_o, rays_d = get_rays(height, width, focal, target_pose)\n","      rays_o = rays_o.reshape([-1, 3])\n","      rays_d = rays_d.reshape([-1, 3])\n","    else:\n","      # Random over all images.\n","      batch = rays_rgb[i_batch:i_batch + batch_size]\n","      batch = torch.transpose(batch, 0, 1)\n","      rays_o, rays_d, target_img = batch\n","      height, width = target_img.shape[:2]\n","      i_batch += batch_size\n","      # Shuffle after one epoch\n","      if i_batch >= rays_rgb.shape[0]:\n","          rays_rgb = rays_rgb[torch.randperm(rays_rgb.shape[0])]\n","          i_batch = 0\n","    target_img = target_img.reshape([-1, 3])\n","\n","    # Run one iteration of TinyNeRF and get the rendered RGB image.\n","    outputs = nerf_forward(rays_o, rays_d,\n","                           near, far, encode, model,\n","                           kwargs_sample_stratified=kwargs_sample_stratified,\n","                           n_samples_hierarchical=n_samples_hierarchical,\n","                           kwargs_sample_hierarchical=kwargs_sample_hierarchical,\n","                           fine_model=fine_model,\n","                           viewdirs_encoding_fn=encode_viewdirs,\n","                           chunksize=chunksize)\n","\n","    # Check for any numerical issues.\n","    for k, v in outputs.items():\n","      if torch.isnan(v).any():\n","        print(f\"! [Numerical Alert] {k} contains NaN.\")\n","      if torch.isinf(v).any():\n","        print(f\"! [Numerical Alert] {k} contains Inf.\")\n","\n","    # Backprop!\n","    rgb_predicted = outputs['rgb_map']\n","    loss = torch.nn.functional.huber_loss(rgb_predicted, target_img)\n","    _TRAIN_LOSS.append(loss.item()) # Append loss after every iteration\n","    loss.backward()\n","    optimizer.step()\n","    optimizer.zero_grad()\n","    psnr = -10. * torch.log10(loss)\n","    train_psnrs.append(psnr.item())\n","\n","    # Evaluate testimg at given display rate.\n","    if (i % display_rate == 0 or i == n_iters - 1):\n","      model.eval()\n","      height, width = testimg.shape[:2]\n","      rays_o, rays_d = get_rays(height, width, focal, testpose)\n","      rays_o = rays_o.reshape([-1, 3])\n","      rays_d = rays_d.reshape([-1, 3])\n","      outputs = nerf_forward(rays_o, rays_d,\n","                             near, far, encode, model,\n","                             kwargs_sample_stratified=kwargs_sample_stratified,\n","                             n_samples_hierarchical=n_samples_hierarchical,\n","                             kwargs_sample_hierarchical=kwargs_sample_hierarchical,\n","                             fine_model=fine_model,\n","                             viewdirs_encoding_fn=encode_viewdirs,\n","                             chunksize=chunksize)\n","\n","      rgb_predicted = outputs['rgb_map']\n","      loss = torch.nn.functional.huber_loss(rgb_predicted, testimg.reshape(-1, 3))\n","      _VAL_LOSS.append(loss.item()) # Append (validation) loss after every display_rate epochs\n","      print(\"Loss:\", loss.item())\n","      val_psnr = -10. * torch.log10(loss)\n","      val_psnrs.append(val_psnr.item())\n","      iternums.append(i)\n","\n","      # Plot example outputs\n","      fig, ax = plt.subplots(1, 4, figsize=(24,4), gridspec_kw={'width_ratios': [1, 1, 1, 3]})\n","      ax[0].imshow(rgb_predicted.reshape([height, width, 3]).detach().cpu().numpy())\n","      ax[0].set_title(f'Iteration: {i}')\n","      ax[1].imshow(testimg.detach().cpu().numpy())\n","      ax[1].set_title(f'Target')\n","      ax[2].plot(range(0, i + 1), train_psnrs, 'r')\n","      ax[2].plot(iternums, val_psnrs, 'b')\n","      ax[2].set_title('PSNR (train=red, val=blue')\n","      z_vals_strat = outputs['z_vals_stratified'].view((-1, n_samples))\n","      z_sample_strat = z_vals_strat[z_vals_strat.shape[0] // 2].detach().cpu().numpy()\n","      if 'z_vals_hierarchical' in outputs:\n","        z_vals_hierarch = outputs['z_vals_hierarchical'].view((-1, n_samples_hierarchical))\n","        z_sample_hierarch = z_vals_hierarch[z_vals_hierarch.shape[0] // 2].detach().cpu().numpy()\n","      else:\n","        z_sample_hierarch = None\n","      _ = plot_samples(z_sample_strat, z_sample_hierarch, ax=ax[3])\n","      ax[3].margins(0)\n","      plt.show()\n","\n","    # Check PSNR for issues and stop if any are found.\n","    if i == warmup_iters - 1:\n","      if val_psnr < warmup_min_fitness:\n","        print(f'Val PSNR {val_psnr} below warmup_min_fitness {warmup_min_fitness}. Stopping...')\n","        return False, train_psnrs, val_psnrs\n","    elif i < warmup_iters:\n","      if warmup_stopper is not None and warmup_stopper(i, psnr):\n","        print(f'Train PSNR flatlined at {psnr} for {warmup_stopper.patience} iters. Stopping...')\n","        return False, train_psnrs, val_psnrs\n","\n","  return True, train_psnrs, val_psnrs"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"11MVYreWmthcV0_Am-AeKyC4UuH8aVWaA"},"id":"MnHIjU4IYfJp","outputId":"64e132b7-956e-4762-d77b-45ff3fac9149","executionInfo":{"status":"ok","timestamp":1714616188969,"user_tz":240,"elapsed":1486244,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["# Run training session(s)\n","for _ in range(n_restarts):\n","  model, fine_model, encode, encode_viewdirs, optimizer, warmup_stopper = init_models()\n","  success, train_psnrs, val_psnrs = train()\n","  if success and val_psnrs[-1] >= warmup_min_fitness:\n","    print('Training successful!')\n","    break\n","\n","print('')\n","print(f'Done!')"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"Vb3TZd06zFP0","executionInfo":{"status":"ok","timestamp":1714616188969,"user_tz":240,"elapsed":7,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[],"source":["torch.save(model.state_dict(), 'nerf.pt')\n","torch.save(fine_model.state_dict(), 'nerf-fine.pt')"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"WslVyF5m5v_D","colab":{"base_uri":"https://localhost:8080/","height":546},"executionInfo":{"status":"ok","timestamp":1714616188969,"user_tz":240,"elapsed":6,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}},"outputId":"d2e62c45-70cd-4719-e9e5-677405f37062"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Initial loss: 0.09984397888183594\n","Final loss: 0.0014186793705448508\n"]}],"source":["# Plotting the loss curve\n","plt.plot(range(1, len(_TRAIN_LOSS) + 1), _TRAIN_LOSS, color='C0')\n","plt.title('Training Loss Curve')\n","plt.xlabel('Iterations')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()\n","print(f\"Initial loss: {_TRAIN_LOSS[0]}\")\n","print(f\"Final loss: {_TRAIN_LOSS[-1]}\")"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xr_NdEpTC--2","outputId":"cfcf0274-e7d2-4b9e-c62e-a808b14ddc17","executionInfo":{"status":"ok","timestamp":1714616188969,"user_tz":240,"elapsed":4,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["DONE!\n"]}],"source":["with open('_TRAIN_LOSS.txt', 'w') as f:\n","  for i in _TRAIN_LOSS:\n","    f.write(\"%s\\n\" % i)\n","print(\"DONE!\")"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"eEYkgSNDBqFH","outputId":"9808bf37-e7a0-43d7-c34b-0c2b43f0b7eb","executionInfo":{"status":"ok","timestamp":1714616190209,"user_tz":240,"elapsed":1244,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAkAAAAHHCAYAAABXx+fLAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABX0klEQVR4nO3deVxUVeMG8GcGmGEfFATEUFxQXAhcETS1JNEsJUuRfNXMVis1ykpfU1sMW+xnqWX6WtriklZWZhrhVkqiqCm55gapgKiAgAIy5/fHcQZHUEFn5g7M8/185jNw75l7z730Os97tqsSQggQERER2RG10hUgIiIisjYGICIiIrI7DEBERERkdxiAiIiIyO4wABEREZHdYQAiIiIiu8MARERERHaHAYiIiIjsDgMQERER2R0GICI7cPz4cahUKixatMi4bdq0aVCpVNX6vEqlwrRp08xap169eqFXr15mPSYRUXUxABHZmAEDBsDV1RUXLly4bplhw4ZBo9Hg7NmzVqxZze3btw/Tpk3D8ePHla6K0caNG6FSqbBy5Uqlq1ItR44cwVNPPYVmzZrB2dkZnp6e6NatGz788ENcvHhR6eoR1VoMQEQ2ZtiwYbh48SK+//77KvcXFxfjhx9+QN++feHt7X3L55k8ebLFv0D37duH119/vcoA9Ouvv+LXX3+16Plru59//hmhoaH45ptv8MADD2D27NlITExE48aNMWHCBIwbN07pKhLVWo5KV4CITA0YMAAeHh5YsmQJRowYUWn/Dz/8gKKiIgwbNuy2zuPo6AhHR+X+CdBoNIqduzY4duwYhg4diiZNmmD9+vVo2LChcd+zzz6Lf/75Bz///LNZzlVUVAQ3NzezHIuotmALEJGNcXFxwaBBg5CcnIycnJxK+5csWQIPDw8MGDAA586dw0svvYTQ0FC4u7vD09MT/fr1w19//XXT81Q1BqikpAQvvPACGjRoYDzHv//+W+mzJ06cwJgxY9CqVSu4uLjA29sbgwcPNmnpWbRoEQYPHgwAuPvuu6FSqaBSqbBx40YAVY8BysnJwejRo+Hn5wdnZ2eEhYVh8eLFJmUM45nef/99zJ8/H82bN4dWq0Xnzp2xffv2m153dR09ehSDBw9G/fr14erqiq5du1YZOGbPno22bdvC1dUV9erVQ6dOnbBkyRLj/gsXLmD8+PEICgqCVquFr68v7r33XuzcufOG53/33XdRWFiIhQsXmoQfgxYtWhhbgKoa42Vw7fgtw9993759eOSRR1CvXj10794d77//PlQqFU6cOFHpGBMnToRGo8H58+eN27Zt24a+fftCp9PB1dUVPXv2xJYtW254TUS2hAGIyAYNGzYMly9fxjfffGOy/dy5c1i3bh0efPBBuLi44OjRo1i1ahXuv/9+fPDBB5gwYQL27t2Lnj174tSpUzU+7+OPP45Zs2ahT58+mDFjBpycnNC/f/9K5bZv346tW7di6NCh+Oijj/D0008jOTkZvXr1QnFxMQCgR48eGDt2LABg0qRJ+PLLL/Hll1+idevWVZ774sWL6NWrF7788ksMGzYM7733HnQ6HR599FF8+OGHlcovWbIE7733Hp566im89dZbOH78OAYNGoSysrIaX/e1srOzERUVhXXr1mHMmDGYPn06Ll26hAEDBph0TS5YsABjx45FmzZtMGvWLLz++usIDw/Htm3bjGWefvppfPLJJ3jooYfw8ccf46WXXoKLiwv2799/wzr89NNPaNasGaKiom77eqoyePBgFBcX4+2338YTTzyBIUOGQKVSVfpvDgC++eYb9OnTB/Xq1QMArF+/Hj169EBBQQGmTp2Kt99+G3l5ebjnnnuQmppqkfoSmZ0gIptz+fJl0bBhQxEZGWmyfd68eQKAWLdunRBCiEuXLony8nKTMseOHRNarVa88cYbJtsAiM8//9y4berUqeLqfwJ2794tAIgxY8aYHO+RRx4RAMTUqVON24qLiyvVOSUlRQAQX3zxhXHbihUrBACxYcOGSuV79uwpevbsafx91qxZAoD46quvjNtKS0tFZGSkcHd3FwUFBSbX4u3tLc6dO2cs+8MPPwgA4qeffqp0rqtt2LBBABArVqy4bpnx48cLAOL33383brtw4YJo2rSpCAoKMt7zgQMHirZt297wfDqdTjz77LM3LHOt/Px8AUAMHDiwWuWr+vsaXPu3M/zd4+PjK5WNjIwUHTt2NNmWmppq8nfV6/UiODhYxMTECL1ebyxXXFwsmjZtKu69995q1ZlIaWwBIrJBDg4OGDp0KFJSUky6lZYsWQI/Pz/07t0bAKDVaqFWy/8Zl5eX4+zZs3B3d0erVq1u2sVyrTVr1gCAsdXGYPz48ZXKuri4GH8uKyvD2bNn0aJFC3h5edX4vFef39/fH/Hx8cZtTk5OGDt2LAoLC7Fp0yaT8nFxccYWCQC46667AMiuq9u1Zs0adOnSBd27dzduc3d3x5NPPonjx49j3759AAAvLy/8+++/N+x68/LywrZt22rUIldQUAAA8PDwuMUruLmnn3660ra4uDikpaXhyJEjxm3Lly+HVqvFwIEDAQC7d+/G4cOH8cgjj+Ds2bPIzc1Fbm4uioqK0Lt3b2zevBl6vd5i9SYyFwYgIhtlGORsGE/y77//4vfff8fQoUPh4OAAANDr9fi///s/BAcHQ6vVwsfHBw0aNMCePXuQn59fo/OdOHECarUazZs3N9neqlWrSmUvXryIKVOmIDAw0OS8eXl5NT7v1ecPDg42BjoDQ5fZtWNTGjdubPK7IQxdPU7lVp04caLK6762Lq+88grc3d3RpUsXBAcH49lnn600Dubdd99Feno6AgMD0aVLF0ybNu2mIc3T0xMAbrgUwu1q2rRppW2DBw+GWq3G8uXLAQBCCKxYsQL9+vUz1unw4cMAgJEjR6JBgwYmr//9738oKSm55f8GiKyJAYjIRnXs2BEhISFYunQpAGDp0qUQQpjM/nr77beRkJCAHj164KuvvsK6deuQlJSEtm3bWvT/hT///POYPn06hgwZgm+++Qa//vorkpKS4O3tbbX/928IgdcSQljl/IAMRAcPHsSyZcvQvXt3fPvtt+jevTumTp1qLDNkyBAcPXoUs2fPRkBAAN577z20bdsWv/zyy3WP6+npiYCAAKSnp1erHtdb0LK8vPy6n7m6Fc8gICAAd911l3Ec0J9//omMjAzExcUZyxj+vu+99x6SkpKqfLm7u1er3kRK4jR4Ihs2bNgwvPbaa9izZw+WLFmC4OBgdO7c2bh/5cqVuPvuu7Fw4UKTz+Xl5cHHx6dG52rSpAn0ej2OHDli0vpx8ODBSmVXrlyJkSNHYubMmcZtly5dQl5enkm56q40bTj/nj17oNfrTVqBDhw4YNxvLU2aNKnyuquqi5ubG+Li4hAXF4fS0lIMGjQI06dPx8SJE+Hs7AwAaNiwIcaMGYMxY8YgJycHHTp0wPTp09GvX7/r1uH+++/H/PnzkZKSgsjIyBvW19D6de39r2pG183ExcVhzJgxOHjwIJYvXw5XV1c88MADxv2GFkJPT09ER0fX+PhEtoItQEQ2zNDaM2XKFOzevbvS2j8ODg6VWjxWrFiBkydP1vhchi/jjz76yGT7rFmzKpWt6ryzZ8+u1OJgWFvm2i/mqtx3333Iysoydr8AwOXLlzF79my4u7ujZ8+e1bkMs7jvvvuQmpqKlJQU47aioiLMnz8fQUFBaNOmDQBUWolbo9GgTZs2EEKgrKwM5eXllbqDfH19ERAQgJKSkhvW4eWXX4abmxsef/xxZGdnV9p/5MgR4+w4T09P+Pj4YPPmzSZlPv744+pf9BUPPfQQHBwcsHTpUqxYsQL333+/yRpBHTt2RPPmzfH++++jsLCw0ufPnDlT43MSKYEtQEQ2rGnTpoiKisIPP/wAAJUC0P3334833ngDo0aNQlRUFPbu3Yuvv/4azZo1q/G5wsPDER8fj48//hj5+fmIiopCcnIy/vnnn0pl77//fnz55ZfQ6XRo06YNUlJS8Ntvv1VamTo8PBwODg545513kJ+fD61Wi3vuuQe+vr6Vjvnkk0/i008/xaOPPoq0tDQEBQVh5cqV2LJlC2bNmmX2AcHffvutsUXnaiNHjsSrr76KpUuXol+/fhg7dizq16+PxYsX49ixY/j222+NLVR9+vSBv78/unXrBj8/P+zfvx9z5sxB//794eHhgby8PNxxxx14+OGHERYWBnd3d/z222/Yvn27SetZVZo3b44lS5YgLi4OrVu3xogRI9CuXTuUlpZi69atWLFiBR599FFj+ccffxwzZszA448/jk6dOmHz5s04dOhQje+Lr68v7r77bnzwwQe4cOGCSfcXAKjVavzvf/9Dv3790LZtW4waNQqNGjXCyZMnsWHDBnh6euKnn36q8XmJrE7JKWhEdHNz584VAESXLl0q7bt06ZJ48cUXRcOGDYWLi4vo1q2bSElJqTTFvDrT4IUQ4uLFi2Ls2LHC29tbuLm5iQceeEBkZmZWmkp9/vx5MWrUKOHj4yPc3d1FTEyMOHDggGjSpIkYOXKkyTEXLFggmjVrJhwcHEymxF9bRyGEyM7ONh5Xo9GI0NDQSlO7Ddfy3nvvVbof19azKoZp8Nd7Gaa+HzlyRDz88MPCy8tLODs7iy5duojVq1ebHOvTTz8VPXr0EN7e3kKr1YrmzZuLCRMmiPz8fCGEECUlJWLChAkiLCxMeHh4CDc3NxEWFiY+/vjjG9bxaocOHRJPPPGECAoKEhqNRnh4eIhu3bqJ2bNni0uXLhnLFRcXi9GjRwudTic8PDzEkCFDRE5OznWnwZ85c+a651ywYIEAIDw8PMTFixerLLNr1y4xaNAg47U3adJEDBkyRCQnJ1f72oiUpBLCiiMGiYiIiGwAxwARERGR3WEAIiIiIrvDAERERER2hwGIiIiI7A4DEBEREdkdBiAiIiKyO1wIsQp6vR6nTp2Ch4dHjZbyJyIiIuUIIXDhwgUEBARUerDytRiAqnDq1CkEBgYqXQ0iIiK6BZmZmbjjjjtuWIYBqAqGJfczMzPh6empcG2IiIioOgoKChAYGFitR+cwAFXB0O3l6enJAERERFTLVGf4CgdBExERkd1hACIiIiK7wwBEREREdodjgIiIiMhmlJeXo6ysrMp9Tk5OcHBwMMt5GICIiIhIcUIIZGVlIS8v74blvLy84O/vf9vr9DEAERERkeIM4cfX1xeurq6VAo4QAsXFxcjJyQEANGzY8LbOxwBEREREiiovLzeGH29v7+uWc3FxAQDk5OTA19f3trrDOAiaiIiIFGUY8+Pq6nrTsoYy1xsnVF0MQERERGQTqjOux1zP6GQAIiIiIrvDAERERER2hwGIiIiI7A5ngVlTyQXg4nnAyRVw81G6NkRERDZFCGGWMtXBFiBr+nMeMCsUSH5d6ZoQERHZDCcnJwBAcXHxTcsayhg+c6vYAmRNjhr5Xn57U/eIiIjqEgcHB3h5eRkXObzZQoheXl63/UgMBiBrcrgSgC6XKFsPIiIiG+Pv7w8AxhB0PYZHYdwuBiBrMgSg8lJl60FERGRjVCoVGjZsCF9fXz4Mtc5hACIiIrohBwcHs4WcG+EgaGty1Mp3BiAiIiJFMQBZk8OVEeuXGYCIiIiUxABkTewCIyIisgmKB6C5c+ciKCgIzs7OiIiIQGpq6g3Lr1ixAiEhIXB2dkZoaCjWrFlTqcz+/fsxYMAA6HQ6uLm5oXPnzsjIyLDUJVSfg6ELjLPAiIiIlKRoAFq+fDkSEhIwdepU7Ny5E2FhYYiJibnuFLitW7ciPj4eo0ePxq5duxAbG4vY2Fikp6cbyxw5cgTdu3dHSEgINm7ciD179uC1116Ds7OztS7r+gxdYFwHiIiISFEqYa41pW9BREQEOnfujDlz5gAA9Ho9AgMD8fzzz+PVV1+tVD4uLg5FRUVYvXq1cVvXrl0RHh6OefPmAQCGDh0KJycnfPnll7dcr4KCAuh0OuTn58PT0/OWj1NJxp/AZzFAvabAuN3mOy4RERHV6PtbsRag0tJSpKWlITo6uqIyajWio6ORkpJS5WdSUlJMygNATEyMsbxer8fPP/+Mli1bIiYmBr6+voiIiMCqVassdh01whYgIiIim6BYAMrNzUV5eTn8/PxMtvv5+SErK6vKz2RlZd2wfE5ODgoLCzFjxgz07dsXv/76Kx588EEMGjQImzZtum5dSkpKUFBQYPKyCAdOgyciIrIFdWohRL1eDwAYOHAgXnjhBQBAeHg4tm7dinnz5qFnz55Vfi4xMRGvv26FB5QaZ4FxEDQREZGSFGsB8vHxgYODA7Kzs022Z2dnX/cZH/7+/jcs7+PjA0dHR7Rp08akTOvWrW84C2zixInIz883vjIzM2/lkm6OD0MlIiKyCYoFII1Gg44dOyI5Odm4Ta/XIzk5GZGRkVV+JjIy0qQ8ACQlJRnLazQadO7cGQcPHjQpc+jQITRp0uS6ddFqtfD09DR5WQQfhkpERGQTFO0CS0hIwMiRI9GpUyd06dIFs2bNQlFREUaNGgUAGDFiBBo1aoTExEQAwLhx49CzZ0/MnDkT/fv3x7Jly7Bjxw7Mnz/feMwJEyYgLi4OPXr0wN133421a9fip59+wsaNG5W4RFOGMUCiHNCXA2rLP+uEiIiIKlM0AMXFxeHMmTOYMmUKsrKyEB4ejrVr1xoHOmdkZECtrmikioqKwpIlSzB58mRMmjQJwcHBWLVqFdq1a2cs8+CDD2LevHlITEzE2LFj0apVK3z77bfo3r271a+vEsMsMEAOhFa7KFcXIiIiO6boOkC2ymLrAF0uAd7ylT+/mgE468x3bCIiIjtXK9YBskvqq1qA+EBUIiIixTAAWZNaXRGCuBYQERGRYhiArI1rARERESmOAcjauBYQERGR4hiArI1rARERESmOAcjajM8DYwsQERGRUhiArM34RHi2ABERESmFAcjaHPlEeCIiIqUxAFmbsQWIXWBERERKYQCyNsMYIA6CJiIiUgwDkLUZ1wFiFxgREZFSGICszZEBiIiISGkMQNbGFiAiIiLFMQBZGxdCJCIiUhwDkLU58FEYRERESmMAsjbjOkBsASIiIlIKA5C1cR0gIiIixTEAWRvXASIiIlIcA5C1GVuAOAuMiIhIKQxA1sZp8ERERIpjALI2PgyViIhIcQxA1mboArvMAERERKQUBiBrc2ALEBERkdIYgKyNY4CIiIgUxwBkbXwYKhERkeIYgKyNLUBERESKYwCyNj4MlYiISHEMQNamcZfvpYXK1oOIiMiOMQBZm/ZKACphACIiIlIKA5C1sQWIiIhIcQxA1qb1kO9sASIiIlIMA5C1Xd0CJISydSEiIrJTDEDWpnG78oMAyooVrQoREZG9YgCyNo0bAJX8md1gREREimAAsjaVigOhiYiIFMYApATjVPgLytaDiIjITjEAKYEtQERERIpiAFKCoQWotEjZehAREdkpBiAlaNgFRkREpCQGICWwC4yIiEhRDEBK4PPAiIiIFMUApAS2ABERESmKAUgJnAZPRESkKAYgJWiuPBCVLUBERESKYABSAqfBExERKcomAtDcuXMRFBQEZ2dnREREIDU19YblV6xYgZCQEDg7OyM0NBRr1qwx2f/oo49CpVKZvPr27WvJS6gZwwNROQiaiIhIEYoHoOXLlyMhIQFTp07Fzp07ERYWhpiYGOTk5FRZfuvWrYiPj8fo0aOxa9cuxMbGIjY2Funp6Sbl+vbti9OnTxtfS5cutcblVA8HQRMRESlK8QD0wQcf4IknnsCoUaPQpk0bzJs3D66urvjss8+qLP/hhx+ib9++mDBhAlq3bo0333wTHTp0wJw5c0zKabVa+Pv7G1/16tWzxuVUj/bKGCAOgiYiIlKEogGotLQUaWlpiI6ONm5Tq9WIjo5GSkpKlZ9JSUkxKQ8AMTExlcpv3LgRvr6+aNWqFZ555hmcPXv2uvUoKSlBQUGBycui2AJERESkKEUDUG5uLsrLy+Hn52ey3c/PD1lZWVV+Jisr66bl+/btiy+++ALJycl45513sGnTJvTr1w/l5eVVHjMxMRE6nc74CgwMvM0ruwknF/ledsmy5yEiIqIqOSpdAUsYOnSo8efQ0FDceeedaN68OTZu3IjevXtXKj9x4kQkJCQYfy8oKLBsCHJ0lu+XGYCIiIiUoGgLkI+PDxwcHJCdnW2yPTs7G/7+/lV+xt/fv0blAaBZs2bw8fHBP//8U+V+rVYLT09Pk5dFOWrl++USy56HiIiIqqRoANJoNOjYsSOSk5ON2/R6PZKTkxEZGVnlZyIjI03KA0BSUtJ1ywPAv//+i7Nnz6Jhw4bmqfjtYgsQERGRohSfBZaQkIAFCxZg8eLF2L9/P5555hkUFRVh1KhRAIARI0Zg4sSJxvLjxo3D2rVrMXPmTBw4cADTpk3Djh078NxzzwEACgsLMWHCBPz55584fvw4kpOTMXDgQLRo0QIxMTGKXGMlhgCkLwP0emXrQkREZIcUHwMUFxeHM2fOYMqUKcjKykJ4eDjWrl1rHOickZEBtboip0VFRWHJkiWYPHkyJk2ahODgYKxatQrt2rUDADg4OGDPnj1YvHgx8vLyEBAQgD59+uDNN9+EVqtV5BorcdRU/FxeAqhdlKsLERGRHVIJIYTSlbA1BQUF0Ol0yM/Pt8x4oPIy4E0f+fMrxwEXG1qjiIiIqJaqyfe34l1gdkntCKiu3HoOhCYiIrI6BiAlqFQcCE1ERKQgBiClcCo8ERGRYhiAlOLAAERERKQUBiClsAWIiIhIMQxASuEYICIiIsUwACmFLUBERESKYQBSCluAiIiIFMMApBRDC1A5W4CIiIisjQFIKewCIyIiUgwDkFLYBUZERKQYBiClsAWIiIhIMQxASmELEBERkWIYgJRibAEqVbYeREREdogBSCnGR2GwBYiIiMjaGICUwjFAREREimEAUgrHABERESmGAUgpbAEiIiJSDAOQUgwtQFwJmoiIyOoYgJTiqJHv7AIjIiKyOgYgpRjHALEFiIiIyNoYgJTCQdBERESKYQBSCgdBExERKYYBSCnsAiMiIlIMA5BSHAyDoBmAiIiIrI0BSCkcA0RERKQYBiClcAwQERGRYhiAlMIWICIiIsUwACmFLUBERESKYQBSijEAsQWIiIjI2hiAlOLkKt9FOVDGEERERGRNDEBK0XpU/FxSoFw9iIiI7BADkFLUDoDmSgi6xABERERkTQxASnLWyfeSfGXrQUREZGcYgJTk7Cnf2QJERERkVQxAStJeCUAcA0RERGRVDEBKYgsQERGRIhiAlMQWICIiIkUwACmJLUBERESKYABSEluAiIiIFMEApCS2ABERESmCAUhJxhYgrgNERERkTQxASjIshMgWICIiIqtiAFISxwAREREpggFISRwDREREpAibCEBz585FUFAQnJ2dERERgdTU1BuWX7FiBUJCQuDs7IzQ0FCsWbPmumWffvppqFQqzJo1y8y1NgO2ABERESlC8QC0fPlyJCQkYOrUqdi5cyfCwsIQExODnJycKstv3boV8fHxGD16NHbt2oXY2FjExsYiPT29Utnvv/8ef/75JwICAix9GbeGLUBERESKUDwAffDBB3jiiScwatQotGnTBvPmzYOrqys+++yzKst/+OGH6Nu3LyZMmIDWrVvjzTffRIcOHTBnzhyTcidPnsTzzz+Pr7/+Gk5OTta4lJoztACVlwCXS5StCxERkR1RNACVlpYiLS0N0dHRxm1qtRrR0dFISUmp8jMpKSkm5QEgJibGpLxer8fw4cMxYcIEtG3b9qb1KCkpQUFBgcnLKrQeFT9fyLLOOYmIiEjZAJSbm4vy8nL4+fmZbPfz80NWVtWBICsr66bl33nnHTg6OmLs2LHVqkdiYiJ0Op3xFRgYWMMruUVqB8D3SkBb/h+g7JJ1zktERGTnFO8CM7e0tDR8+OGHWLRoEVQqVbU+M3HiROTn5xtfmZmZFq7lVQYvAlzqA1l7gKMbrXdeIiIiO6ZoAPLx8YGDgwOys7NNtmdnZ8Pf37/Kz/j7+9+w/O+//46cnBw0btwYjo6OcHR0xIkTJ/Diiy8iKCioymNqtVp4enqavKymQUugxZUuvezKA7mJiIjI/BQNQBqNBh07dkRycrJxm16vR3JyMiIjI6v8TGRkpEl5AEhKSjKWHz58OPbs2YPdu3cbXwEBAZgwYQLWrVtnuYu5HX5t5Hv238rWg4iIyE44Kl2BhIQEjBw5Ep06dUKXLl0wa9YsFBUVYdSoUQCAESNGoFGjRkhMTAQAjBs3Dj179sTMmTPRv39/LFu2DDt27MD8+fMBAN7e3vD29jY5h5OTE/z9/dGqVSvrXlx1GcYB5exTth5ERER2QvEAFBcXhzNnzmDKlCnIyspCeHg41q5daxzonJGRAbW6oqEqKioKS5YsweTJkzFp0iQEBwdj1apVaNeunVKXcPv8rgSg3MNyOryjVtn6EBER1XEqIYRQuhK2pqCgADqdDvn5+dYZDyQE8E4T4FI+8NTvQMM7LX9OIiKiOqYm3991bhZYraRSsRuMiIjIihiAbEWDlvL97D/K1oOIiMgOMADZivrN5fvZI8rWg4iIyA4wANkK7ysB6BwDEBERkaUxANkK7xby/ewROSiaiIiILIYByFbUCwJUaqC0ECjMUbo2REREdRoDkK1w1AK6Kw9h5UBoIiIii2IAsiUcB0RERGQVDEC2pH4z+X7+uKLVICIiqusYgGyJu3yiPQqzb1yOiIiIbgsDkC1x95XvhWeUrQcREVEdxwBkS9zlA2DZAkRERGRZDEC2xL2BfC9iCxAREZElMQDZEmMLUA4XQyQiIrIgBiBb4nalBUhfBlw8r2xdiIiI6jAGIFviqAWcveTPXA2aiIjIYhiAbI1hJlgRAxAREZGlMADZmqvHAREREZFFMADZGuNaQJwKT0REZCkMQLbGzRCA2AJERERkKQxAtoZrAREREVkcA5CtcdbJ90v5ytaDiIioDmMAsjVaT/leWqhsPYiIiOowBiBbo3GX7yUXlK0HERFRHcYAZGu0HvK9hC1ARERElsIAZGu0bAEiIiKytFsKQJmZmfj333+Nv6empmL8+PGYP3++2SpmtzgGiIiIyOJuKQA98sgj2LBhAwAgKysL9957L1JTU/Hf//4Xb7zxhlkraHeuHgPEJ8ITERFZxC0FoPT0dHTp0gUA8M0336Bdu3bYunUrvv76ayxatMic9bM/hjFAEEBpkaJVISIiqqtuKQCVlZVBq9UCAH777TcMGDAAABASEoLTp0+br3b2yMkFUDnInzkOiIiIyCJuKQC1bdsW8+bNw++//46kpCT07dsXAHDq1Cl4e3ubtYJ2R6WqGAjNcUBEREQWcUsB6J133sGnn36KXr16IT4+HmFhYQCAH3/80dg1RrfBMBC6pEDZehAREdVRjrfyoV69eiE3NxcFBQWoV6+ecfuTTz4JV1dXs1XObhkHQrMFiIiIyBJuqQXo4sWLKCkpMYafEydOYNasWTh48CB8fX3NWkG7ZFwMkWOAiIiILOGWAtDAgQPxxRdfAADy8vIQERGBmTNnIjY2Fp988olZK2iXOAaIiIjIom4pAO3cuRN33XUXAGDlypXw8/PDiRMn8MUXX+Cjjz4yawXtEluAiIiILOqWAlBxcTE8POSX9K+//opBgwZBrVaja9euOHHihFkraJc0DEBERESWdEsBqEWLFli1ahUyMzOxbt069OnTBwCQk5MDT09Ps1bQLrEFiIiIyKJuKQBNmTIFL730EoKCgtClSxdERkYCkK1B7du3N2sF7RLHABEREVnULU2Df/jhh9G9e3ecPn3auAYQAPTu3RsPPvig2Spnt9gCREREZFG3FIAAwN/fH/7+/sanwt9xxx1cBNFcrn4gKhEREZndLXWB6fV6vPHGG9DpdGjSpAmaNGkCLy8vvPnmm9Dr9eauo/0xrgTNAERERGQJt9QC9N///hcLFy7EjBkz0K1bNwDAH3/8gWnTpuHSpUuYPn26WStpdzRu8p1PgyciIrKIWwpAixcvxv/+9z/jU+AB4M4770SjRo0wZswYBqDbpbnyOJGyYmXrQUREVEfdUhfYuXPnEBISUml7SEgIzp07d9uVsntObAEiIiKypFsKQGFhYZgzZ06l7XPmzMGdd95Z4+PNnTsXQUFBcHZ2RkREBFJTU29YfsWKFQgJCYGzszNCQ0OxZs0ak/3Tpk1DSEgI3NzcUK9ePURHR2Pbtm01rpdi2AJERERkUbcUgN5991189tlnaNOmDUaPHo3Ro0ejTZs2WLRoEd5///0aHWv58uVISEjA1KlTsXPnToSFhSEmJgY5OTlVlt+6dSvi4+MxevRo7Nq1C7GxsYiNjUV6erqxTMuWLTFnzhzs3bsXf/zxB4KCgtCnTx+cOXPmVi7X+pyuBKBSBiAiIiJLUAkhxK188NSpU5g7dy4OHDgAAGjdujWefPJJvPXWW5g/f361jxMREYHOnTsbW5T0ej0CAwPx/PPP49VXX61UPi4uDkVFRVi9erVxW9euXREeHo558+ZVeY6CggLodDr89ttv6N27903rZCifn5+vzMrWhTnA+8EAVMCUc4D6lnIqERGRXanJ9/ctrwMUEBBQabDzX3/9hYULF1Y7AJWWliItLQ0TJ040blOr1YiOjkZKSkqVn0lJSUFCQoLJtpiYGKxateq655g/fz50Op3Joo1XKykpQUlJifH3goKCatXfYgwtQBDA5YsVs8KIiIjILBRtWsjNzUV5eTn8/PxMtvv5+SErK6vKz2RlZVWr/OrVq+Hu7g5nZ2f83//9H5KSkuDj41PlMRMTE6HT6YyvwMDA27gqMzAGILAbjIiIyALqbN/K3Xffjd27d2Pr1q3o27cvhgwZct1xRRMnTkR+fr7xlZmZaeXaXkOtBhxd5M9lnAlGRERkbooGIB8fHzg4OCA7O9tke3Z2Nvz9/av8jL+/f7XKu7m5oUWLFujatSsWLlwIR0dHLFy4sMpjarVaeHp6mrwUp+FAaCIiIkup0RigQYMG3XB/Xl5ejU6u0WjQsWNHJCcnIzY2FoAcBJ2cnIznnnuuys9ERkYiOTkZ48ePN25LSkoyPpH+evR6vck4H5vn5AbgLKfCExERWUCNApBOp7vp/hEjRtSoAgkJCRg5ciQ6deqELl26YNasWSgqKsKoUaMAACNGjECjRo2QmJgIABg3bhx69uyJmTNnon///li2bBl27NhhHHhdVFSE6dOnY8CAAWjYsCFyc3Mxd+5cnDx5EoMHD65R3RRlbAFiFxgREZG51SgAff7552avQFxcHM6cOYMpU6YgKysL4eHhWLt2rXGgc0ZGBtRXTQOPiorCkiVLMHnyZEyaNAnBwcFYtWoV2rVrBwBwcHDAgQMHsHjxYuTm5sLb2xudO3fG77//jrZt25q9/hZjmPnFFiAiIiKzu+V1gOoyxdcBAoBF9wPHfwceWgiEPqxMHYiIiGqRmnx/19lZYLUeW4CIiIgshgHIVvFxGERERBbDAGSrjA9E5SBoIiIic2MAslVOV7rA2AJERERkdgxAtsrYAsQAREREZG4MQLbK2ALELjAiIiJzYwCyVWwBIiIishgGIFvFWWBEREQWwwBkqwzrAJUWKlsPIiKiOogByFY5sQuMiIjIUhiAbJWGXWBERESWwgBkqwyzwLgQIhERkdkxANkqJxf5XnZR2XoQERHVQQxAtsrRWb5fLlG2HkRERHUQA5CtctTKdwYgIiIis2MAslWGFqDyEkAIZetCRERUxzAA2SpHjXwXekB/Wdm6EBER1TEMQLbK0AIEAJcvKVcPIiKiOogByFY5aCt+5jggIiIis2IAslVqNeBwpRuMLUBERERmxQBkyzgVnoiIyCIYgGyZsQWIAYiIiMicGIBsmbEFiF1gRERE5sQAZMu4GCIREZFFMADZMrYAERERWQQDkC0zLIZYXqpsPYiIiOoYBiBbxhYgIiIii2AAsmUcA0RERGQRDEC2jC1AREREFsEAZMvYAkRERGQRDEC2zIEBiIiIyBIYgGyZsQWIXWBERETmxABky/gsMCIiIotgALJlbAEiIiKyCAYgW8YWICIiIotgALJlhhagcgYgIiIic2IAsmWcBk9ERGQRDEC2jAshEhERWQQDkC1jCxAREZFFMADZMrYAERERWQQDkC1z0Mj3y6XK1oOIiKiOYQCyZWwBIiIisggGIFvGMUBEREQWwQBky9gCREREZBEMQLaMK0ETERFZhE0EoLlz5yIoKAjOzs6IiIhAamrqDcuvWLECISEhcHZ2RmhoKNasWWPcV1ZWhldeeQWhoaFwc3NDQEAARowYgVOnTln6MszP8cogaK4ETUREZFaKB6Dly5cjISEBU6dOxc6dOxEWFoaYmBjk5ORUWX7r1q2Ij4/H6NGjsWvXLsTGxiI2Nhbp6ekAgOLiYuzcuROvvfYadu7cie+++w4HDx7EgAEDrHlZ5sEuMCIiIotQCSGEkhWIiIhA586dMWfOHACAXq9HYGAgnn/+ebz66quVysfFxaGoqAirV682buvatSvCw8Mxb968Ks+xfft2dOnSBSdOnEDjxo1vWqeCggLodDrk5+fD09PzFq/MDPIygFmhMghNzlauHkRERLVATb6/FW0BKi0tRVpaGqKjo43b1Go1oqOjkZKSUuVnUlJSTMoDQExMzHXLA0B+fj5UKhW8vLyq3F9SUoKCggKTl024ugVI2ZxKRERUpygagHJzc1FeXg4/Pz+T7X5+fsjKyqryM1lZWTUqf+nSJbzyyiuIj4+/bhpMTEyETqczvgIDA2/haizAybXi59Ii5epBRERUxyg+BsiSysrKMGTIEAgh8Mknn1y33MSJE5Gfn298ZWZmWrGWN6Bxq1gN+uI5ZetCRERUhzgqeXIfHx84ODggO9t0fEt2djb8/f2r/Iy/v3+1yhvCz4kTJ7B+/fob9gVqtVpotdpbvAoLUqkAV2/gwmmg+BzgdfPxS0RERHRzirYAaTQadOzYEcnJycZter0eycnJiIyMrPIzkZGRJuUBICkpyaS8IfwcPnwYv/32G7y9vS1zAdbgeqXuxWeVrQcREVEdomgLEAAkJCRg5MiR6NSpE7p06YJZs2ahqKgIo0aNAgCMGDECjRo1QmJiIgBg3Lhx6NmzJ2bOnIn+/ftj2bJl2LFjB+bPnw9Ahp+HH34YO3fuxOrVq1FeXm4cH1S/fn1oNBplLvRWudST78XsAiMiIjIXxQNQXFwczpw5gylTpiArKwvh4eFYu3atcaBzRkYG1OqKhqqoqCgsWbIEkydPxqRJkxAcHIxVq1ahXbt2AICTJ0/ixx9/BACEh4ebnGvDhg3o1auXVa7LbAwtQBwDREREZDaKrwNki2xmHSAAWJ0A7FgI9HwFuHuSsnUhIiKyYbVmHSCqBtf68p1jgIiIiMyGAcjWGQdBswuMiIjIXBiAbB1ngREREZkdA5CtczF0gbEFiIiIyFwYgGwdxwARERGZHQOQrbt6Gjwn7BEREZkFA5CtMwSgy5eAsmJl60JERFRHMADZuqsfiFqUq2xdiIiI6ggGIFunUgEeVx70euG0snUhIiKqIxiAagPdlafA52UqWw8iIqI6ggGoNtDdId/zGYCIiIjMgQGoNvAKlO8MQERERGbBAFQb6K4EIHaBERERmQUDUG1g7AL7V9l6EBER1REMQLWB15VB0PmZXAyRiIjIDBiAagNDC1BpIXDxvLJ1ISIiqgMYgGoDJxfA1Uf+zIHQREREt40BqLbQNZLvBVwMkYiI6HYxANUWhhYgPhWeiIjotjEA1RZuhgDE54ERERHdLgag2sLQAsQHohIREd02BqDaws1bvrMLjIiI6LYxANUWrgxARERE5sIAVFuwC4yIiMhsGIBqCw6CJiIiMhsGoNrC2ALELjAiIqLbxQBUWxgGQZdeAC6XKFsXIiKiWo4BqLbQ6gCVg/yZA6GJiIhuCwNQbaFWV8wE40BoIiKi28IAVJtwIDQREZFZMADVJoYWoMIzytaDiIiolmMAqk18W8v33V8rWw8iIqJajgGoNol6HlA7Acc2AUc3KV0bIiKiWosBqDbxagx0GCF/3r1E2boQERHVYgxAtU3bWPl+JBnQ6xWtChERUW3FAFTbBHYFnNyAojNA1h6la0NERFQrMQDVNo4aoFlP+fM/ScrWhYiIqJZiAKqNWvaV76n/A0oKla0LERFRLcQAVBuFDQXqBQGFWcDWj5SuDRERUa3DAFQbOWqBuyfLn9O/U7YuREREtRADUG1lGAd09jDw+X3A0njOCiMiIqomR6UrQLfI3Rdw8wWKcoATW+S2/EygXhNl60VERFQLsAWoNvMPNf09Z78y9SAiIqplGIBqs0oBaJ8y9SAiIqplFA9Ac+fORVBQEJydnREREYHU1NQbll+xYgVCQkLg7OyM0NBQrFmzxmT/d999hz59+sDb2xsqlQq7d++2YO0V5t3C9He2ABEREVWLogFo+fLlSEhIwNSpU7Fz506EhYUhJiYGOTk5VZbfunUr4uPjMXr0aOzatQuxsbGIjY1Fenq6sUxRURG6d++Od955x1qXoRzDQGgDBiAiIqJqUQkhhFInj4iIQOfOnTFnzhwAgF6vR2BgIJ5//nm8+uqrlcrHxcWhqKgIq1evNm7r2rUrwsPDMW/ePJOyx48fR9OmTbFr1y6Eh4fXqF4FBQXQ6XTIz8+Hp6dnzS/MmnIPAxfPAwvvBRw0wKTTgAPHthMRkf2pyfe3Yi1ApaWlSEtLQ3R0dEVl1GpER0cjJSWlys+kpKSYlAeAmJiY65a3Cz7BQKNO8vlg5aVA7iGla0RERGTzFAtAubm5KC8vh5+fn8l2Pz8/ZGVlVfmZrKysGpWvrpKSEhQUFJi8ahW1GmjUQf6csVXZuhAREdUCig+CtgWJiYnQ6XTGV2BgoNJVqrmg7vL9BAMQERHRzSgWgHx8fODg4IDs7GyT7dnZ2fD396/yM/7+/jUqX10TJ05Efn6+8ZWZmXlbx1NEk27y/fgWQLlhXURERLWCYgFIo9GgY8eOSE5ONm7T6/VITk5GZGRklZ+JjIw0KQ8ASUlJ1y1fXVqtFp6eniavWueOTnIQdGEWcPaI0rUhIiKyaYp2gSUkJGDBggVYvHgx9u/fj2eeeQZFRUUYNWoUAGDEiBGYOHGisfy4ceOwdu1azJw5EwcOHMC0adOwY8cOPPfcc8Yy586dw+7du7Fvn1wU8ODBg9i9e/dtjxOyeU4uQOOu8ue/+YBUIiKiG1E0AMXFxeH999/HlClTEB4ejt27d2Pt2rXGgc4ZGRk4ffq0sXxUVBSWLFmC+fPnIywsDCtXrsSqVavQrl07Y5kff/wR7du3R//+/QEAQ4cORfv27StNk6+T2g+X71s+BHIOAJcKgH0/Anm1sEuPiIjIghRdB8hW1ap1gK5Wdgn4oDVw8Zzp9sZRwGO/KFMnIiIiK6kV6wCRBTg5A3clAGpHwNGlYnvGVqDsonL1IiIisjEMQHVN1PPAa7nApJPA2N2ASz25PWtv5bKFZ4CVo4Fjv1u1ikREREpjAKqLVCpA7QDUbwoEXhkY/e+OyuWSXwfSVwKL77du/YiIiBTGAFTXNeoo309WEYDOHLBuXYiIiGwEA1Bdd8eVAHToV2D7QqC0uGKfg6bi58Ic69aLiIhIQQxAdV3jKKBhOFB6Afg5AZjTCSi4srTAhYolBpD9tyLVIyIiUgIDUF3n5AyMTgL6vgN4BAAFJ4HfpgLll4G8jIpyOfuUqyMREZGVMQDZA0cN0PVpYOjXAFTAnuXAX0sA/eWKMtkMQEREZD8YgOxJow5AJ/mYEfz4vOm+kzv4EFUiIrIbDED25t43gXpBFb/f0QVwdJYzwk6mAbn/ALu+Bg6uZSAiIqI6y1HpCpCVad2BoUuAz/oBJflA0x6Ad3Pgr6XA/3oDKgdAlMuycV8BrR9Qtr5EREQWwBYge+TXFhi/B3hoIdBtHNDpsYp9hvADAGsnAt+MAE7/Zf06EhERWRBbgOyVixcQ+rD8ObALMGgBUHAKaBwJuNaX0+XzM+Wr7CIwbIUsW3JBdo05V/GQufIywMHJapdARER0qxiASLpziOnvvm0qpsYf3SRDz+US4NMecjHF59MAoQeO/yEfu7FhOnB6D9A2Fhi8yNq1JyIiqhEGIKra/f8HbPkIOPgzUF4CLLgH0JcB547K/anzgbRFQN4J08/9/T3Q81XAN8TqVSYiIqoujgGiqjXuCsQvkYOkAeDUTtMnyie/LsOP1lPOIgv/D3BHZ7lv+wLTY53YCqwYBZzcWbGtKBfIy7TsNRAREV0HW4DoxgK7Asc2V73PyRUYuwtw9ZZPoD+6EfhiILDrKyD8Efkg1r0rgW9Hy/Jn/wGe2gyUlwIL7pYBqNNjQL93OHaIiIisigGIbqzTY0Dmn0D7EYBnQ7l69BcD5b5W/QA3n4qyTXsCwX2Aw78Cn/UFfFubziDL2gOsfAxwa1DxGI4dCwGPhkDPCRXlcg8Dzl6AewOLXx4REdknlRBc7e5aBQUF0Ol0yM/Ph6dnFbOd7N2i++WiiU9uBBq0Mt13qQD4ahDw7/aKbQ1ay9ag3V+ZlvVqIrvRHDTAE+sB/1A5hmjFKNm61P0FoMNwwMPf4pdERES1X02+vxmAqsAAdBOlRfLl7lv1fr0eOHsYWDcJyNgGDPsG8AwAlv1HdoNdvigXXHwhHVidABz6BdA1Bjo/BmxIlIOuDVzqAU/9DngFWufaiIio1mIAuk0MQGZUfhlwuKqnVQhg99dy3FCrfkDxObkCtWF2GSBXn251H7D5feDcEaD9f4CBcys+n/03UL8poHEDis4CJQVAYTaQ/q1sNfIMsO41EhGRTajJ9zfHAJFlOVzzn5hKJQONgWt9YPgqYPN7snWozUCgy1OAWg14twAW3gvsXgKUFAKZqXIBxjMHAP87geHfA/N7ycUaDTJSgMfWyZlpaofK9Sk4Bez/CWg7SI4xKj4HOGplmAJkwFKpzH0XiIjIxrAFqApsAbIh3z0J7Fles88E3QVkpwN+7WRLku4OuWjjri+Bf3cAl/LkQo/eLYADqwHvYCB+KfDra8DJHcCD84Dm98hWqQW9gRbRwEMLbnpaIiJSFrvAbhMDkA3R6+Xg6SMbgLYPAqWFckXqnxNkqAGA0MFyZlnTHsCyRyq2X03tJBdyrA4HLTBilZzOv/true3JjUBAezl7LTNVznBbOxGIfA5o2adynUvy5fglIiKyGgag28QAVAuc3CnDiWcA0D2hottqQyKwaYYMRI27Aod/k4OuAcCnJRD9utz3ywQ568y7BZA0Re5vGAa4+8lp/NcKjgF6vgIsGQwUnwW0OhlyAGDkTzJ87fsBuJgnF41MWyRnuT34KdAk0tJ3g4iIwAB02xiAajEhgFO75BPvHbWAvhxY/YJcW2jIF5XXFhIC2Jgop+/3fk22Hn3SreIRH37t5DPRqmpVMnB0AcKGAmmfV73fzVeObXL3A/IzgAYhQNcxyo41KrsEqNSAo0a5OhARmRkD0G1iALJzp3bLR33c0VkGlX9+A354Frh8CWh2N3B0gyzn2xZwcpZrIl2reW+gKMf08SFXG/IlEHI/UHBSdullbJWLTDbvDYhy+fgQdz85Fik/E9i/Wo5raj0ACLmv6mPqy2X3XINWcnD59RTlAh9HArpGwOjfKg9UJyKqpRiAbhMDEFVy/jhQdlGO/dk4Q7YaPbRQdrMtHw6UlwFtBwLHt8juuSfWy3D0xyw5Zf/QWjm26PxxuUaSsw4QqOhGM9B4yCBk6LZz1gGXriqjdgJ6vQJcyJYz4nq+Ksvv+AxI/VSOUWoQAjy5SZ7/aoU5clzSn58ASa/JbffPAjqNqny9l0vkApWcEUdEtQgD0G1iAKIbEkKGCQ+/yvv05TKQOGqr/mxJITCnE3DhtPxd7QhABTTqIPfl/C23ezSUgetSntzf9C4gKx24eM70eH7t5LPVcg9VPpcuUI5x0l+WYeZIMuDkBpQVVZRx9wOeT5PdeGcPy0eXXMgCNr0rF59sM1D+rnaUg81v1rp09T06tE4OHK/qPl0uZfcbEZkdA9BtYgAiizpzEMj4EwgIl91ohi6o0iLg55dkMOj7jgw2Zw7IwdsuXnL/6heAkguAV2Ngx+cVq2a7+wN3TwS0HvJ5azejdpStQUVnrvxezVlyKrVcQ6leE6BJlPzd3R/wayP3nz8h13P6dwew8W050PzJTTIY7lkmrz0vAzi4BnjgI6D9sIpj52XKWX6+rat7J6Wi3IoH8irp3zTghzHAPa8Bre9Xti5EdooB6DYxAFGtcHKnnHnm7Al0HFXRMnNkvVyBG0K23lw8L5/N1j1B/vznx3IcUb0g4KuHKo7n6CJbbAAgpL/shss/KR94e/6EPG5xbuV6ODoDD38uA86+Hyrv92snZ8cV/Gu6XeMBdBwpB61rPeRSB/rLwKD5sr7ZfwN3T5JjsXZ8DvgEA83vNj3G/p+A5f+RrVMPzpcLaBpk/ClnCt49uaIVqvhKC1p1WrGqUnRWLrXQ9C7gnsmm+xbdDxz/Xa4r9dx28wSysotXBqtX0aKo18vVzwPC5b0hIgag28UARHZj/XS5+GPPV2XQuDpAVCV1AfDb64B/OzngWpSb7lep5bili+cBVx/TwOTREAi+FygtlkGpOi1OakfZIpS1Vz4/rkmUbAlrM1A+YPf7pyuCVYcRchVxlVrO3Pt2tNze/j9Ar0myTp/1BUovAI2jZNC69hlzQsi6OTgBwX3kO1DRZWdYZsHwLDvPABlE9n4DfP9UxXFG/SLrmn9Sttj5htz8Wq/19yp5fQ3D5PHUajl7LztdXvuOhcDPLwKejWTgMqxmTmTHGIBuEwMQ0Q0YHhdSdkl+uS9+AMg9CAR0APrPlK0Rx36XAWDLLNlFFdAeCIuvGJidexj45RW5SndgF9n9pVIBKR/LgeF+7eQMuYvnLXcdGnc5Tir/X1nXjiOB7f+TLV2AfEBv93HAsc3AgZ+B0CGylcuwJEKvibJ1bPP7FWO6VGq5P6C9bJVa/5ZsxYl4SgZMZy9g+wI5ZqtRR/nsOl2gfHDwvh8BFYA7h8qxX1evgB6/TK5w/sVAGVh7TwFS5so1qQDgrpeALk/IFr+GYRWtT3o9cOAneY5GHcx/D7P/lvesxwQ+g49sAgPQbWIAIqqB8suyNcfJ5faPdXKnfJ5bp8dkd9jOL2UY8GkJfPeEDBfN75HdblnpMiTFfiKDyPq35PgiQI5vahkjj3X1MgWu3jJM/PwikLWn6jo4OssuOcP4qGupHCq3fGk8gGY9gc6PA8uGmQ40vxkHbcVYruvResqZedeWc/aS90ftKOt88bycBejRUAa6nP3Apndk2aY9ZRAL6S9/1+uBE1uA438AmX/K8VkqtQyfHUbI2YtpiwGNK9CqPxDYueK8+34E/v4e+Ps7+XvbQcDg66yDZW6XS64/ycBACBla/doA9ZtZp17mcKlATli4dgYnVRsD0G1iACKyQce3yPegbhXb9Pobd9vl/gNsfld2mV08DzTqJLuj9OUyABWcluODtn8mH7kS0EGu3q27A/hzrmz90XrK1pO/lsnuve4vAFs+kqEBAO56Ua4SbvhSPn9ChrFjm+UsPP92cnyTgwY4dwQIfRgIeUCOT9r3AwAhv6T7z5TLKez7UYaO0CGyHh+1r1gWwdW7otUHAB5fL+uZ/m3172NAB0DrLoNrxtbrl7t2YHxAB9lSVnwO+GtJ5fKPfCODV3GunNF44bQc1N4wDPC8Q95nw+Nhjv8hg9/VoUpfLtfYcnSR984/1HQwedklYP2bchmHrs8AUWNlt5/WHTh7RI4ba/ewnFRw4Gc5VkurA+57V95H3zZyYkHmNqBl35uHKGspLZataBfPAVvnyND2eHJF96s5FJ0FDq+TQfV64eqf3+Tsz/vek3+zWooB6DYxABHZoaKz8gv6ZuOgAPll/ff38v3OIdUf8GzoPjTIPwmUFcugdL1j5OyXLVs+LeXsv4w/gV8nywHiwffKVoOvB8sWswEfyQB2apd8HEtRDtBhpAxp2/8nu82ubr1ydJEho3Gk/NITQnaZbZ0jy9VrKrvq9v8ow8O1GkfJVjjDyuk3E9xH1tPQzdj6AXneek3lzMCrg5xKDQxeJFvc/k0FDv0KnNlvejw3X7kuVvIbcr2siGeAyGeBVc/IAelXUznI0FNWLMNdk0j5iJsmUcDhJDmg/lIe0O4h2b3p5CxD119L5bgrz0ZA++EVq8mXX1mvS+tx8+suLZYti/tWyfvl1VguQREYIdfk2jrbtHxMIhA5Rv5cdklei8ZN3icPf9P/Vi6Xyvvif6fcfnKnnOBgGOgvBLA0Hjj0CxD2CPDgJzIwuvnIMW0Hf5bB+tQuWd6lPjDhH0DtIFvbVOrbD2PX/ndvQQxAt4kBiIhqlaq+YISQocBZV7Ev54D8oistlCuMh/8HaNCy8vEyt8vWoU6jZQtL4Rk50LvglFyl3MkViF8ij52VLqf/nzsmv+TdfGQocPWWv2f/DRRmX1nT6gq1owxCVbl28c+rGZ7xt/+n6t0XZ50c66V2qOgerY6Oo2SXZtIU089pPIC7XpD38MAa2SUbPkyGjYBwoGG4XALi3FHgwikZWvcsl4P4q7quRh0rumg9GsqQdXKHPM9jv8jrXRovny9o4NtGji/zaSmPuW6SbM1s+6AMPn/8n7z3kc/JkH5tV6//ndfv/r1a+//I0Hn5knzUz71vylB49ohsYQvpL0OZ0MtWy7Ii2SpnCEvll+XjgTa/J39vO0g+bkjjZtFAxAB0mxiAiIjMLPcwsH2hXNOq3UOy5erIeuD8MRmeLl+UXYmt+smZft+MkF2HrvVlS5FHQzk2zFkH7FwMeAXJxT33LJetO83vvjJwXAVAyHM8/FnF+c8ekQPyi3LkTMY7OssHH4tyILCrPIfQAz8+Z1pvjwDgzsGyLjcLDjcKdoDsBm1+j+yOPbmzoosxoD3wxAZ5/i8GXmnx8ZAhoaRAduW5eMnQeqPnEt6Kdg8D6Suv/HLl3lWlYbgc6H7wF1nmeteqdpLXcymv8gKt3i3kcfb/KLuj2//HdC0wM2AAuk0MQERENsDw9XSj1gK9HoCQXTUlVwYRn/5LjiG62dIAVR1/7SQ5rsqlHtD5CaD7eHmc8stAymzZAuYdLL+4z5+Qi5MWZlV8PqAD4N1cBrXTe+SaW6GD5TMGvZtXLPSZcwDYNk+2DvV7B7ijk9x+MQ/4MraiS6phGPDQZ4BPC7lv7wo5hir/XxmIyktlK9SOz2XrW+fRsnWqtAhocY8c3H50IzD6V9lle+aAPOahdbLFKSwO2L1UhqCBH8suwtO7gTUTZLmw+CsLsBZUXGP9ZrKVC1fum4e/rJthrJqBs04uDOrZSE48uHDKdH+Pl4F7/nvjv1ENMQDdJgYgIiI7JYTs6vNoWL3xYIbP7F0pu3/aDLz97p3yy7Lbq7RQzt5TO9z43Dc6nxBycH1NHz1z9QSD88dlN9el/IpH4mT8KbvcXOrJ0HnmgAxO/nfKcWsQ8uHObt7yGMXngDUvySDY/QXZ8nZHl4pV5M2EAeg2MQARERHVPjX5/q5mvCUiIiKqOxiAiIiIyO4wABEREZHdYQAiIiIiu2MTAWju3LkICgqCs7MzIiIikJqaesPyK1asQEhICJydnREaGoo1a9aY7BdCYMqUKWjYsCFcXFwQHR2Nw4cPW/ISiIiIqBZRPAAtX74cCQkJmDp1Knbu3ImwsDDExMQgJyenyvJbt25FfHw8Ro8ejV27diE2NhaxsbFIT083lnn33Xfx0UcfYd68edi2bRvc3NwQExODS5cuWeuyiIiIyIYpPg0+IiICnTt3xpw5cwAAer0egYGBeP755/Hqq69WKh8XF4eioiKsXr3auK1r164IDw/HvHnzIIRAQEAAXnzxRbz00ksAgPz8fPj5+WHRokUYOnToTevEafBERES1T62ZBl9aWoq0tDRER0cbt6nVakRHRyMlJaXKz6SkpJiUB4CYmBhj+WPHjiErK8ukjE6nQ0RExHWPWVJSgoKCApMXERER1V2KBqDc3FyUl5fDz8/PZLufnx+ysrKq/ExWVtYNyxvea3LMxMRE6HQ64yswMPCWroeIiIhqB8XHANmCiRMnIj8/3/jKzMxUukpERERkQYoGIB8fHzg4OCA7O9tke3Z2Nvz9/av8jL+//w3LG95rckytVgtPT0+TFxEREdVdigYgjUaDjh07Ijk52bhNr9cjOTkZkZGRVX4mMjLSpDwAJCUlGcs3bdoU/v7+JmUKCgqwbdu26x6TiIiI7Iuj0hVISEjAyJEj0alTJ3Tp0gWzZs1CUVERRo0aBQAYMWIEGjVqhMTERADAuHHj0LNnT8ycORP9+/fHsmXLsGPHDsyfPx8AoFKpMH78eLz11lsIDg5G06ZN8dprryEgIACxsbFKXSYRERHZEMUDUFxcHM6cOYMpU6YgKysL4eHhWLt2rXEQc0ZGBtTqioaqqKgoLFmyBJMnT8akSZMQHByMVatWoV27dsYyL7/8MoqKivDkk08iLy8P3bt3x9q1a+Hs7Gz16yMiIiLbo/g6QLYoPz8fXl5eyMzM5HggIiKiWqKgoACBgYHIy8uDTqe7YVnFW4Bs0YULFwCA0+GJiIhqoQsXLtw0ALEFqAp6vR6nTp2Ch4cHVCqVWY9tSKdsXbIs3mfr4H22Dt5n6+B9tg5L3mchBC5cuICAgACT4TNVYQtQFdRqNe644w6LnoPT7a2D99k6eJ+tg/fZOnifrcNS9/lmLT8GXAiRiIiI7A4DEBEREdkdBiAr02q1mDp1KrRardJVqdN4n62D99k6eJ+tg/fZOmzlPnMQNBEREdkdtgARERGR3WEAIiIiIrvDAERERER2hwGIiIiI7A4DkBXNnTsXQUFBcHZ2RkREBFJTU5Wuks1KTExE586d4eHhAV9fX8TGxuLgwYMmZS5duoRnn30W3t7ecHd3x0MPPYTs7GyTMhkZGejfvz9cXV3h6+uLCRMm4PLlyyZlNm7ciA4dOkCr1aJFixZYtGiRpS/PZs2YMQMqlQrjx483buN9Np+TJ0/iP//5D7y9veHi4oLQ0FDs2LHDuF8IgSlTpqBhw4ZwcXFBdHQ0Dh8+bHKMc+fOYdiwYfD09ISXlxdGjx6NwsJCkzJ79uzBXXfdBWdnZwQGBuLdd9+1yvXZgvLycrz22mto2rQpXFxc0Lx5c7z55pu4er4P73PNbd68GQ888AACAgKgUqmwatUqk/3WvKcrVqxASEgInJ2dERoaijVr1tzaRQmyimXLlgmNRiM+++wz8ffff4snnnhCeHl5iezsbKWrZpNiYmLE559/LtLT08Xu3bvFfffdJxo3biwKCwuNZZ5++mkRGBgokpOTxY4dO0TXrl1FVFSUcf/ly5dFu3btRHR0tNi1a5dYs2aN8PHxERMnTjSWOXr0qHB1dRUJCQli3759Yvbs2cLBwUGsXbvWqtdrC1JTU0VQUJC48847xbhx44zbeZ/N49y5c6JJkybi0UcfFdu2bRNHjx4V69atE//884+xzIwZM4ROpxOrVq0Sf/31lxgwYIBo2rSpuHjxorFM3759RVhYmPjzzz/F77//Llq0aCHi4+ON+/Pz84Wfn58YNmyYSE9PF0uXLhUuLi7i008/ter1KmX69OnC29tbrF69Whw7dkysWLFCuLu7iw8//NBYhve55tasWSP++9//iu+++04AEN9//73Jfmvd0y1btggHBwfx7rvvin379onJkycLJycnsXfv3hpfEwOQlXTp0kU8++yzxt/Ly8tFQECASExMVLBWtUdOTo4AIDZt2iSEECIvL084OTmJFStWGMvs379fABApKSlCCPk/WLVaLbKysoxlPvnkE+Hp6SlKSkqEEEK8/PLLom3btibniouLEzExMZa+JJty4cIFERwcLJKSkkTPnj2NAYj32XxeeeUV0b179+vu1+v1wt/fX7z33nvGbXl5eUKr1YqlS5cKIYTYt2+fACC2b99uLPPLL78IlUolTp48KYQQ4uOPPxb16tUz3nvDuVu1amXuS7JJ/fv3F4899pjJtkGDBolhw4YJIXifzeHaAGTNezpkyBDRv39/k/pERESIp556qsbXwS4wKygtLUVaWhqio6ON29RqNaKjo5GSkqJgzWqP/Px8AED9+vUBAGlpaSgrKzO5pyEhIWjcuLHxnqakpCA0NBR+fn7GMjExMSgoKMDff/9tLHP1MQxl7O3v8uyzz6J///6V7gXvs/n8+OOP6NSpEwYPHgxfX1+0b98eCxYsMO4/duwYsrKyTO6T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\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Initial loss: 0.062102627009153366\n","Final loss: 0.001995642436668277\n"]}],"source":["plt.plot(range(1, display_rate*len(_VAL_LOSS) + 1, display_rate), _VAL_LOSS, color='C1')\n","plt.title('Validation Loss Curve')\n","plt.xlabel('Iterations')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()\n","print(f\"Initial loss: {_VAL_LOSS[0]}\")\n","print(f\"Final loss: {_VAL_LOSS[-1]}\")"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-yHxtJGCC-Oi","outputId":"09d24d4c-3a3d-427a-bd3c-0aadf10739a8","executionInfo":{"status":"ok","timestamp":1714616190209,"user_tz":240,"elapsed":6,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["DONE!\n"]}],"source":["with open('_VAL_LOSS.txt', 'w') as f:\n","  for i in _VAL_LOSS:\n","    f.write(\"%s\\n\" % i)\n","print(\"DONE!\")"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"KABHuYgXi641","outputId":"c940476d-e2ae-49a2-a352-4ef0f87c5412","executionInfo":{"status":"ok","timestamp":1714616190704,"user_tz":240,"elapsed":499,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.plot(range(1, display_rate*len(_TRAIN_LOSS[::display_rate]) + 1, display_rate), _TRAIN_LOSS[::display_rate], color='C0', label='Training')\n","plt.plot(range(1, display_rate*len(_VAL_LOSS) + 1, display_rate), _VAL_LOSS, color='C1', label='Validation')\n","plt.title('Loss Curve')\n","plt.xlabel('Iterations')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","source":["# Load model\n","# model, fine_model, encode, encode_viewdirs, optimizer, warmup_stopper = init_models()\n","\n","# model_state_dict = torch.load('nerf-fine.pt')\n","# model = NeRF(encoder.d_output, n_layers=n_layers, d_filter=d_filter, skip=skip,\n","#             d_viewdirs=model.d_viewdirs)\n","\n","# model.load_state_dict(model_state_dict)\n","# model.to(device)\n","\n","# fine_model = model\n","# fine_model.to(device)\n","\n","# Eval/Test model (change variables for our test image)\n","model.eval()\n","height, width = testimg.shape[:2]\n","rays_o, rays_d = get_rays(height, width, focal, testpose)\n","rays_o = rays_o.reshape([-1, 3])\n","rays_d = rays_d.reshape([-1, 3])\n","outputs = nerf_forward(rays_o, rays_d,\n","                        near, far, encode, model,\n","                        kwargs_sample_stratified=kwargs_sample_stratified,\n","                        n_samples_hierarchical=n_samples_hierarchical,\n","                        kwargs_sample_hierarchical=kwargs_sample_hierarchical,\n","                        fine_model=fine_model,\n","                        viewdirs_encoding_fn=encode_viewdirs,\n","                        chunksize=chunksize)\n","\n","rgb_predicted = outputs['rgb_map']\n","_loss = torch.nn.functional.mse_loss(rgb_predicted, testimg.reshape(-1, 3))\n","print(\"Loss:\", _loss.item())\n","\n","\n","# Plot output\n","plt.imshow(rgb_predicted.reshape([height, width, 3]).detach().cpu().numpy())\n","plt.title(f'Result')\n","\n","plt.show()"],"metadata":{"id":"gUFPNelg-Zsq","colab":{"base_uri":"https://localhost:8080/","height":470},"executionInfo":{"status":"ok","timestamp":1714616190704,"user_tz":240,"elapsed":5,"user":{"displayName":"Lucas Martinez","userId":"17839641396214676141"}},"outputId":"14e28fa9-db46-4f8b-e49c-9fe1b7f1fce5"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss: 0.0039852517656981945\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"A100","provenance":[{"file_id":"1d_Fet0GYx0nVrKJyfNQQf_ZRTG0oU2IK","timestamp":1713496796922},{"file_id":"1TppdSsLz8uKoNwqJqDGg8se8BHQcvg_K","timestamp":1713138364337},{"file_id":"1rXpc96JPkC5BrhCS7SJY4EFBe-FKHwHT","timestamp":1650481071162},{"file_id":"1rO8xo0TemN67d4mTpakrKrLp03b9bgCX","timestamp":1649678676808}],"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}